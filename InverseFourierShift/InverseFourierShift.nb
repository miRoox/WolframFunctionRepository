(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    520979,       9824]
NotebookOptionsPosition[    430307,       8012]
NotebookOutlinePosition[    507861,       9518]
CellTagsIndexPosition[    507109,       9493]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["InverseFourierShift", "Title",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.768121380493498*^9, 3.768121383782686*^9}},
 CellTags->{"Title", "TabNext"},
 CellID->362346026,ExpressionUUID->"7713ef73-3a24-46dd-bb34-9c9c3466e8d6"],

Cell["Inverse zero-frequency shift", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.768121356650134*^9},
 CellTags->{"Description", "TabNext"},
 CellID->450900334,ExpressionUUID->"59fa9636-6bc3-40a5-9464-5b0af03ea0d2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name you gave in the Title line above. \
You can add input cells and extra code to define additional input cases or \
prerequisites. All definitions, including dependencies, will be included in \
the generated resource function.\n\nThis section should be evaluated before \
creating the Examples section below.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b0f9add8-9bdc-4fed-a4a6-61db286bc92a"]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Definition",
 CellID->474513213,ExpressionUUID->"652dac34-a0e1-4924-89d2-42520c773430"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{"data_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{"data", ",", "All"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{
    RowBox[{"data_", "?", "ArrayQ"}], ",", "dim_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"ArrayDepth", "@", "data"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"[", "dim", "]"}], "]"}], "=", 
      RowBox[{"Check", "[", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"Ceiling", "[", 
          RowBox[{
           RowBox[{"Dimensions", "[", "data", "]"}], "/", "2"}], "]"}], "[", 
         RowBox[{"[", "dim", "]"}], "]"}], ",", "\n", "      ", 
        RowBox[{"Return", "[", 
         RowBox[{"data", ",", "Block"}], "]"}]}], "\n", "  ", "]"}]}], ";", 
     "\[IndentingNewLine]", "  ", 
     RowBox[{"RotateRight", "[", 
      RowBox[{"data", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Code",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.768121376068245*^9, 3.7681213994135804`*^9}},
 CellTags->"TabNext",
 CellLabel->"In[7]:=",
 CellID->778396829,ExpressionUUID->"ded2ad6a-9b04-44ca-9148-4d93ce3531af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Deletable->False,
 CellTags->"Documentation",
 CellID->855965831,ExpressionUUID->"287bcf5e-3319-4c12-bdb8-97836e1b19f6"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Document input usage cases by first typing an input structure, then \
pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "de828ad6-aa7f-43c2-8681-37395843d5d5"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"UsageInputs",
 CellTags->"Usage",
 CellID->310800389,ExpressionUUID->"8353bba2-b1ff-4da1-a340-5d164627231a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  StyleBox["data", "TI"], "]"}]], "UsageInputs",
 CellChangeTimes->{{3.768121415094477*^9, 3.7681214366027074`*^9}},
 CellTags->"TabNext",
 CellID->410373307,ExpressionUUID->"14246f43-db73-4aff-a25b-1e64eac924c6"],

Cell[TextData[{
 "rearranges a zero-frequency-shifted Fourier transform ",
 Cell[BoxData[
  StyleBox["data", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "22065f37-1af0-4201-8bc0-2d23d1abf80e"],
 " back to the original transform output."
}], "UsageDescription",
 TaggingRules->{
  "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
   "TemplateVersion" -> "1.2.16", "ToolsOpen" -> True, "StatusMessage" -> 
   ProgressIndicator[Appearance -> "Necklace"]},
 CellChangeTimes->{{3.768121465762375*^9, 3.768121482770348*^9}},
 CellTags->"TabNext",
 CellID->584004037,ExpressionUUID->"89526ee7-d991-47ea-b84f-9d628c9dabc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{
   StyleBox["data", "TI"], ",", " ", 
   StyleBox["dim", "TI"]}], "]"}]], "UsageInputs",
 CellChangeTimes->{{3.7681214921738863`*^9, 3.7681215202604923`*^9}},
 CellID->75175646,ExpressionUUID->"d72eaf70-ffae-4ee6-9283-307f3870febd"],

Cell[TextData[{
 "operates along the dimension ",
 Cell[BoxData[
  StyleBox["dim", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3f5215f2-4282-4c3f-958b-ef1d78ab5474"],
 " of ",
 Cell[BoxData[
  StyleBox["data", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c8126f44-f662-44ee-ae0e-0caf6867661d"],
 ". "
}], "UsageDescription",
 CellChangeTimes->{3.768121533887272*^9},
 CellID->768162341,ExpressionUUID->"8f74a83f-774c-4412-a980-0541e1c27539"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "1c9677ff-3f51-4b96-be5b-c72ff9593644"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->"Details & Options",
 CellID->66019318,ExpressionUUID->"1feab1a9-f803-4813-9111-6ecfad4269f8"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["ResourceFunction", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction"],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<InverseFourierShift\>\"", 
   "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b1439bbd-9278-45c2-98b3-48da2f1af369"],
 " is the inverse of ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["ResourceFunction", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction"],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<FourierShift\>\"", "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "69d64d45-495b-4177-a826-47c06101709f"],
 "."
}], "Notes",
 TaggingRules->{
  "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
   "TemplateVersion" -> "1.2.16", "ToolsOpen" -> True, "StatusMessage" -> 
   ProgressIndicator[Appearance -> "Necklace"], "AttachedInlineCell" -> 
   CellObject[438097]},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681218508203993`*^9, 3.7681219052315116`*^9}, 
   3.7681303083761435`*^9, 3.768130544292638*^9},
 CellTags->"TabNext",
 CellID->521904482,ExpressionUUID->"e329d6b2-e942-41fe-bcb5-113092b336e2"],

Cell["\<\
In optics, the zero frequency term appears in the center of spectrum.\
\>", "Notes",
 TaggingRules->{
  "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
   "TemplateVersion" -> "1.2.16", "ToolsOpen" -> True, "StatusMessage" -> 
   ProgressIndicator[Appearance -> "Necklace"]},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681218508203993`*^9, 3.7681218806541057`*^9}, {
   3.7681219117338834`*^9, 3.7681219729973874`*^9}, 3.7681259464306545`*^9},
 CellID->502755435,ExpressionUUID->"96e7da0e-387f-4201-a84d-90c5102ed80c"],

Cell[TextData[{
 "Typically work with ",
 ButtonBox["InverseFourier",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InverseFourier"],
 "."
}], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681218508203993`*^9, 3.7681218806541057`*^9}, {
  3.7681219117338834`*^9, 3.7681219729973874`*^9}, {3.768125936280074*^9, 
  3.7681259362810745`*^9}, {3.7681263509927945`*^9, 3.7681263509937944`*^9}},
 CellID->678908167,ExpressionUUID->"49a0b527-b9b3-478c-9bab-049981e02f73"],

Cell[TextData[{
 ButtonBox["InverseFourier",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InverseFourier"],
 " assumes that the zero frequency term appears at position 1 in the input \
list."
}], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681218508203993`*^9, 3.7681218806541057`*^9}, {
   3.7681219117338834`*^9, 3.7681219729973874`*^9}, {3.768125936280074*^9, 
   3.7681259362810745`*^9}, 3.768126351489823*^9},
 CellID->628857989,ExpressionUUID->"d92beb8f-1f49-4094-847d-ff74869b79db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"[Right-click]\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Insert Page Break\"", FontFamily -> 
                "Source Sans Pro Semibold", FontColor -> GrayLevel[0.286275], 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          " between cells or through the menu using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"Insert\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Page Break\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], 
          ").\n\nExamples should be grouped into Subsection and Subsubsection \
cells similarly to existing documentation pages. Here are some typical \
Subsection names and the types of examples they normally contain:\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Basic Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "most basic function usage\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Scope: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Options: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "available options and parameters for the function\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Applications: \"", FontFamily -> "Source Sans Pro Semibold",
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "standard industry or academic applications\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Properties and Relations: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "how the function relates to other functions\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Possible Issues: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "limitations or unexpected behavior a user might experience\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Neat Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "687aaf45-73d4-4368-8eea-3de97e4d3bd2"]
}], "Section",
 Deletable->False,
 CellTags->"Examples",
 CellID->180595041,ExpressionUUID->"e3866e68-5dfe-4fd4-9ebc-259ee014e3f0"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellLabel->"In[1]:=",
 CellID->462042388,ExpressionUUID->"dd64a368-d6bc-44ae-ba08-3da9b43facb2"],

Cell["Swap the left and right halves of a vector:", "Text",
 CellChangeTimes->{3.7681227949033976`*^9},
 CellID->13078159,ExpressionUUID->"07891191-ec70-4de2-b073-06aeb8fc98cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7681228006367254`*^9, {3.7681230441576543`*^9, 3.7681230453667235`*^9}},
 CellLabel->"In[1]:=",
 CellID->443871870,ExpressionUUID->"564810d6-6a51-43b9-8cb6-e43220593cc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "1", ",", "2", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768127570409541*^9, 3.7681322234406796`*^9},
 CellLabel->"Out[1]=",
 CellID->478041838,ExpressionUUID->"685ba3f9-4656-4d29-a8c7-4992caba2bc8"]
}, Open  ]],

Cell["\<\
If a vector has an odd number of elements, then the middle element is \
considered part of the right half of the vector:\
\>", "Text",
 CellChangeTimes->{
  3.7681228100122623`*^9, {3.768123072123254*^9, 3.7681230725862803`*^9}},
 CellID->134280562,ExpressionUUID->"603a372a-7eed-49b4-be6b-6e121fd9e43a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.768123047792862*^9, 3.768123048766918*^9}},
 CellLabel->"In[2]:=",
 CellID->98303434,ExpressionUUID->"6b56da24-7ae3-4c57-a568-ef44ee77b911"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "1", ",", "2", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768127572500661*^9, 3.7681322235116835`*^9},
 CellLabel->"Out[2]=",
 CellID->329562357,ExpressionUUID->"8989ac91-ae58-4268-8ac1-d7d20e7b3c3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "33a6073a-e014-47f9-91d3-a02f40784c3e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->186862239,ExpressionUUID->"9b99f2cd-8f2a-481a-a166-f714789c9bb0"],

Cell["\<\
Swap the first quadrant of the matrix with the third, and the second quadrant \
with the fourth:\
\>", "Text",
 CellChangeTimes->{3.7681230675499926`*^9},
 CellID->87046347,ExpressionUUID->"e9044251-f263-46ba-89cc-8fd38db1a85c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4"},
       {"5", "6", "7", "8"},
       {"9", "10", "11", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.768123159858272*^9, 3.7681231607053204`*^9}},
 CellLabel->"In[1]:=",
 CellID->156703476,ExpressionUUID->"22e88f36-a018-41e5-8e2f-a552d7c54321"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "8", "5", "6"},
     {"11", "12", "9", "10"},
     {"3", "4", "1", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768127576137869*^9, 3.76813222363169*^9},
 CellLabel->"Out[1]//MatrixForm=",
 CellID->123232129,ExpressionUUID->"ddb14bce-20fb-4f09-bca0-361ef13c1616"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2f7d66a3-614a-4fb1-a821-8341f374f1b7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->449881923,ExpressionUUID->"26bb1570-7ebc-4471-9361-15b1a9bc0e6c"],

Cell["Swap halves of each column of matrix:", "Text",
 CellChangeTimes->{3.768123133094741*^9},
 CellID->73220614,ExpressionUUID->"26291598-17a2-4981-897b-0f41cdb1a267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "2", "3", "4"},
        {"5", "6", "7", "8"},
        {"9", "10", "11", "12"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7681231630234528`*^9, 3.768123165890617*^9}},
 CellLabel->"In[1]:=",
 CellID->233312684,ExpressionUUID->"0c279aec-3fa1-4ba7-ab76-c605e713b21b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"},
     {"1", "2", "3", "4"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768127578755018*^9, 3.768132223737696*^9},
 CellLabel->"Out[1]//MatrixForm=",
 CellID->151557820,ExpressionUUID->"2d6a0790-4273-4db4-98f1-1e7c7b2847ac"]
}, Open  ]],

Cell["Swap halves of each column of matrix:", "Text",
 CellChangeTimes->{3.7681231504307327`*^9},
 CellID->112389031,ExpressionUUID->"dbd77de0-999b-4de9-9319-bc294f33c618"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "2", "3", "4"},
        {"5", "6", "7", "8"},
        {"9", "10", "11", "12"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", "2"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.768123167990737*^9, 3.7681231691678047`*^9}},
 CellLabel->"In[2]:=",
 CellID->42218661,ExpressionUUID->"5e2059a9-51ff-4fe1-8a2f-838249c9f9f8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "4", "1", "2"},
     {"7", "8", "5", "6"},
     {"11", "12", "9", "10"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7681275819212*^9, 3.7681322238157005`*^9},
 CellLabel->"Out[2]//MatrixForm=",
 CellID->505374486,ExpressionUUID->"8f4b4543-74b1-4e18-af71-4fab98d5162c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellLabel->"In[3]:=",
 CellID->964056545,ExpressionUUID->"c4a6c349-7e50-4eb5-9d86-5c28957d0c65"],

Cell["Can be applied to a multidimensional array:", "Text",
 CellChangeTimes->{3.7681231890259404`*^9},
 CellID->649685796,ExpressionUUID->"a5d606e7-746e-498e-9c0e-37812f2a579e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"1", "2"},
           {"3", "4"},
           {"5", "6"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"7", "8"},
           {"9", "10"},
           {"11", "12"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"13", "14"},
           {"15", "16"},
           {"17", "18"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"19", "20"},
           {"21", "22"},
           {"23", "24"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{
  3.7681231961733494`*^9, {3.7681232324784255`*^9, 3.7681232332414694`*^9}},
 CellLabel->"In[1]:=",
 CellID->836153427,ExpressionUUID->"730e6804-95fb-4046-b99a-95649c36eabf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"22", "21"},
         {"24", "23"},
         {"20", "19"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"16", "15"},
         {"18", "17"},
         {"14", "13"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"10", "9"},
         {"12", "11"},
         {"8", "7"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"4", "3"},
         {"6", "5"},
         {"2", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7681275900596647`*^9, 3.768132224056714*^9},
 CellLabel->"Out[1]//MatrixForm=",
 CellID->340577025,ExpressionUUID->"db635405-83bb-48e3-bbce-729776cefc20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7c942d88-e2b4-4e0d-abe0-f5df4deac87b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->497379371,ExpressionUUID->"55e3faac-a8e2-4a4c-b599-4cedc5fa8445"],

Cell["Dimension can be any valid part specification:", "Text",
 CellChangeTimes->{3.7681232138893623`*^9},
 CellID->141385734,ExpressionUUID->"754bb0aa-b171-434d-a280-a5b91392bb54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "2"},
            {"3", "4"},
            {"5", "6"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}], 
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"7", "8"},
            {"9", "10"},
            {"11", "12"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}]},
        {
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"13", "14"},
            {"15", "16"},
            {"17", "18"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}], 
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"19", "20"},
            {"21", "22"},
            {"23", "24"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    RowBox[{
     RowBox[{"-", "2"}], ";;"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7681232352365837`*^9, 3.768123235915622*^9}},
 CellLabel->"In[1]:=",
 CellID->5992283,ExpressionUUID->"13ffb3dd-c475-45dd-b309-6608c3de522e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"4", "3"},
         {"6", "5"},
         {"2", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"10", "9"},
         {"12", "11"},
         {"8", "7"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"16", "15"},
         {"18", "17"},
         {"14", "13"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"22", "21"},
         {"24", "23"},
         {"20", "19"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.768127593082838*^9, 3.768132224241725*^9},
 CellLabel->"Out[1]//MatrixForm=",
 CellID->353025700,ExpressionUUID->"957000c3-d375-4db7-809a-a7fad5d4b8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFourierShift", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "2"},
            {"3", "4"},
            {"5", "6"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}], 
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"7", "8"},
            {"9", "10"},
            {"11", "12"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}]},
        {
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"13", "14"},
            {"15", "16"},
            {"17", "18"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}], 
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"19", "20"},
            {"21", "22"},
            {"23", "24"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.768123237960739*^9, 3.768123238686781*^9}},
 CellLabel->"In[2]:=",
 CellID->19129526,ExpressionUUID->"bdac0a49-3a05-40a6-b335-fc88b27d19d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"14", "13"},
         {"16", "15"},
         {"18", "17"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"20", "19"},
         {"22", "21"},
         {"24", "23"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"2", "1"},
         {"4", "3"},
         {"6", "5"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"8", "7"},
         {"10", "9"},
         {"12", "11"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7681275954039707`*^9, 3.7681322243257303`*^9},
 CellLabel->"Out[2]//MatrixForm=",
 CellID->60231231,ExpressionUUID->"1fc9dc18-bcf6-4856-b419-5fce7fd389d3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellChangeTimes->{{3.768126407928051*^9, 3.768126410870219*^9}},
 CellLabel->"In[3]:=",
 CellID->599001874,ExpressionUUID->"07b2e8dd-fc06-4928-b34d-6064976018c7"],

Cell["An optical low-pass filter model:", "Text",
 CellChangeTimes->{{3.768128502990882*^9, 3.768128522912021*^9}, {
  3.779592032566246*^9, 3.779592040812498*^9}},
 CellID->213814835,ExpressionUUID->"d1372a48-7b4a-4f36-813d-8e6da6be47f6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{GraphicsBox[{{
       RGBColor[0.87, 0.94, 1], 
       EdgeForm[
        GrayLevel[0]], 
       DiskBox[{5, 0}, {0.4, 2}]}, {
       RGBColor[0.87, 0.94, 1], 
       EdgeForm[
        GrayLevel[0]], 
       DiskBox[{15, 0}, {0.4, 2}]}, {{
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["\"P\"", "0"], "TR", StripOnInput -> False], 
          TraditionalForm], {1, -2.}], {
         Thickness[Large], 
         LineBox[{{0, -2.5}, {0, 2.5}}]}}, {
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["\"P\"", "1"], "TR", StripOnInput -> False], 
          TraditionalForm], {11, -2.}], {
         LineBox[{{{10, -2.5}, {10, -0.5}}, {{10, 2.5}, {10, 0.5}}}]}}, {
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["\"P\"", "2"], "TR", StripOnInput -> False], 
          TraditionalForm], {21, -2.}], {
         Thickness[Large], 
         LineBox[{{20, -2.5}, {20, 2.5}}]}}}, 
      InsetBox[
       FormBox[
        StyleBox[
         TagBox[
          RowBox[{"g", "(", 
            RowBox[{
              SubscriptBox["x", "0"], ",", 
              SubscriptBox["y", "0"]}], ")"}], HoldForm], "TR", StripOnInput -> 
         False], TraditionalForm], {0.7, 3}], 
      InsetBox[
       FormBox[
        StyleBox[
         TagBox[
          RowBox[{"G", "(", 
            RowBox[{"x", ",", "y"}], ")"}], HoldForm], "TR", StripOnInput -> 
         False], TraditionalForm], {19.3, 3}], {
       Dashing[{0, Small, Small, Small}], 
       TagBox[
        ConicHullRegionBox[{0, 0}, {{1, 0}}], "InfiniteLine"]}, {{
        Arrowheads[{{-0.05, 0}, {0.1, 0, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.01, 0.5, 
           GraphicsBox[
            InsetBox[
             BoxData[
              FormBox[
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   StyleBox["\"f\"", "TI", StripOnInput -> False], TextForm]],
                  "InlineText"], 
                Text[
                 Style["f", "TI"]]], TraditionalForm]], {Left, Top}]]}, {
          0.1, 1, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.05, 1}}], 
        ArrowBox[{{0, -3.25}, {5, -3.25}}]}, {
        Arrowheads[{{-0.05, 0}, {0.1, 0, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.01, 0.5, 
           GraphicsBox[
            InsetBox[
             BoxData[
              FormBox[
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   StyleBox["\"f\"", "TI", StripOnInput -> False], TextForm]],
                  "InlineText"], 
                Text[
                 Style["f", "TI"]]], TraditionalForm]], {Left, Top}]]}, {
          0.1, 1, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.05, 1}}], 
        ArrowBox[{{5, -3.25}, {10, -3.25}}]}, {
        Arrowheads[{{-0.05, 0}, {0.1, 0, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.01, 0.5, 
           GraphicsBox[
            InsetBox[
             BoxData[
              FormBox[
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   StyleBox["\"f\"", "TI", StripOnInput -> False], TextForm]],
                  "InlineText"], 
                Text[
                 Style["f", "TI"]]], TraditionalForm]], {Left, Top}]]}, {
          0.1, 1, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.05, 1}}], 
        ArrowBox[{{10, -3.25}, {15, -3.25}}]}, {
        Arrowheads[{{-0.05, 0}, {0.1, 0, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.01, 0.5, 
           GraphicsBox[
            InsetBox[
             BoxData[
              FormBox[
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   StyleBox["\"f\"", "TI", StripOnInput -> False], TextForm]],
                  "InlineText"], 
                Text[
                 Style["f", "TI"]]], TraditionalForm]], {Left, Top}]]}, {
          0.1, 1, 
           GraphicsBox[
            LineBox[{{0, 0.2}, {0, -0.2}}]]}, {0.05, 1}}], 
        ArrowBox[{{15, -3.25}, {20, -3.25}}]}}}, BaseStyle -> {"Text"}, 
     ImageSize -> Medium],InterpretationBox[
     Cell[
      BoxData[
       FormBox[
        StyleBox["\"4f filter system\"", "Output", StripOnInput -> False], 
        TextForm]], "InlineText"], 
     Text[
      Style["4f filter system", "Output"]]]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", #2}], "]"}]& )],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Text",
 CellChangeTimes->{
  3.768129219124842*^9, 3.7681294705642233`*^9, 3.7681296985832653`*^9, 
   3.7681299610712795`*^9, {3.768130000191517*^9, 3.768130019781637*^9}, {
   3.7681300576068006`*^9, 3.7681300584748507`*^9}, {3.7681301191113186`*^9, 
   3.7681301415165997`*^9}, {3.7681304923236647`*^9, 3.768130498510019*^9}},
 TextAlignment->Center,
 CellID->156245712,ExpressionUUID->"d4644dcf-5168-4e14-b88f-1bc8c844d93c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"opticalLowpass", "[", 
   RowBox[{"data_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"opticalInverseFourier", "[", 
   RowBox[{
    RowBox[{"Fourier", "@", "data"}], "*", 
    RowBox[{"InverseFourierShift", "@", 
     RowBox[{"DiskMatrix", "[", 
      RowBox[{"r", ",", 
       RowBox[{"Dimensions", "@", "data"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opticalLowpass", "[", 
   RowBox[{"image_Image", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Image", "@", 
   RowBox[{"Abs", "@", 
    RowBox[{"opticalLowpass", "[", 
     RowBox[{
      RowBox[{"ImageData", "@", "image"}], ",", "r"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{
  3.768128543262185*^9, {3.7681311812380686`*^9, 3.7681311912806435`*^9}, {
   3.7683918690795603`*^9, 3.768391891489842*^9}},
 CellID->129445251,ExpressionUUID->"cfbcbb8a-803c-4ddc-be14-d904c35ffff9"],

Cell["Apply to a image:", "Text",
 CellChangeTimes->{{3.7681285987053566`*^9, 3.7681286038386497`*^9}},
 CellID->266648978,ExpressionUUID->"506c1997-b8c7-4eff-ab48-97ace3bea8de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticalLowpass", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
hl5O5VRO5VRO5VRO5VRO5VQm9H9RttB5
      "], {{0, 256}, {256, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{256, 256},
    PlotRange->{{0, 256}, {0, 256}}], ",", "32"}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->33497519,ExpressionUUID->"00769555-3f66-4ecd-97a1-a5924452ec6a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwkl2lUTv/bxZukEo2apEIhkpSos/dNg1mRIZJCypwiU+YmJZWSikZDkeZE
hSKREImEImRKZFb9Mj/3fz0vzlnrrHNenHV997X3/gxY6jt7uZSEhMQGOfFt
tscWWz8/j61zZP/3sMzD28Lc+38vJST//zp5og4Nt3pTrdCCy9Vm8eobDwYU
eTD591T2na/OB4lBCFjljk+hBuw8vJ4uaWEcdG89zZOG80T/p5id/ASWd9/h
tEkuRvfXxlytw9gxVopR6nrcUqzPdntFag27C4ONqbDd14zdP/pyvqwG58c1
ofvPVWy+b0D17umc7WZFmdCHMBi7AtaqsqyKGsOSEBO6Df2GsuAyyNxWY4OD
C9c8C+LbO3v5uyaQhY6beSV9K/v/Wc+kdwLd1h5DWngIRs0ewYWhCzkjXuC3
2jLo1LQLzwrvw/SOHCNmSvDTia84kihBp+Gd6Pp8CVE30lB7qgI/Fv1Eq7YJ
I1et5GbNcH7zCOXQV3OoGPgLlm8E7Et9br1la4HwWyIKNzUkuMVxMN1fmXDc
aT2en6hBrbIBbJluQX1aUemhEbU1pJi7/RuqBw9hu/Qsvvk7mRoKErz4uBek
03pRx9ufU28n8vGHZD4r2Mdz8StYajCJr+NH06rvIH7XkqZDWD5C7u3AI59j
8J9ZgtAH0ZiRMAmeEuchfUeb35bYc63LNMrPMOaW7zXYM2gozJfWIfP+AO75
OpxfdskwZ+JepDf2gihGGx1hhcIl07t4NNeFPaqTeSrxDO//yufW43GsT/Ki
X8pw7gtU4sHZ6iwON2XN/ils857FghtTuNhgIh+YLmK6TyAPzwulRA8vrhqr
wPSdpcLfM1mwfqTDjtxRbBxtxLI38tyw7i7STfZjsNcZlISosuOYJZNOjqBf
ZW9uOKbK/17acnDHEjYmzWV1tQH9nQrxODlJ6HN6KcxH1kCpx0cEVzRh2oUL
+HXtNi5mf8ad3q3wmJGL8os+2HxqKcpiRJgsOihEvqsS3N6p4+3cFCFzRRQe
v9dkiasTN1vMZnydHldNbEGUtgaXWU+iau4UbloyiCd/fELcw7OISY7EMeli
7BJpUnf7FF5e5czxY+05186EuS9NmG07m9/Vwrn4vwxmKpyik2sYh3/U4/zM
XryhvJanFsTQ3CeAL2cY0nXTUSxuOwfz5nsYHBWHBVvGw/R8ON73j8CWDBnE
1yvj68GT+Jl2Ewd35qCHrgcMA38J0pP2WT+e2xe+FccQKVmD7KNHMENHDkX7
8lDa1Z/PjMdxevwwOpxuxubJOvj9RgL5W1ahcGIAyuxTUNv6EHn9pWinIUu9
jZ24tvwxBro+wKoD77BHWoYXnFSYskCTp06pUGnUH9iWX8f+3dl4vvEenqUq
sSTVlGPtbVn833S63p1Fd4cZbDEdw1WHJDj8ZACef22A93Rbdt9Yz+Svngze
qsvEzGWoPPpEeBCxDS3xAupqonAsVJXv2ybw6pYJvL5Ziz/kL2NjoScsemig
dV0YpN5140uXHo+0aNN6pipfy0ynr1cMJ/vl8nV2ATNuHaFMZzjl//gxY/Jq
Jjts5+r8vTQ5H8YqjdXMkLTismdjaft6NzumFLC+9hG3anxibq8P7GP1gOet
Spmnc5QKd2N5Li2a+n3TWBx2nkkWtbwzq4aFgUWsGXqQNad92BwsIo3VuFdb
mueiZWje4zNcnV4hbKIRlYtWcE9SMN20/elj58hegw05/ZgCE5vkmJAl3os1
yzhldxArtLfy5a7JLD0qx77nT2P/8nC4PtoAr0OTUOLigTPubbiaaUe3Hdv5
bMMuekWN47t7h/Frfwb8XCbxycFQjrgfRWfJAOYvmsvKgWaU/KvLxrlqzFeU
ZJVcAYznXxLUv7gjU7IVpu29GOf1D/3KWzDvgCp/RE+jwvYVPGI4ly/6qrHH
s00oDHXDPecGdG76jNKttZi3/Sx+Xj+PLPNYhCUdEL56VkKjZiqzhkSw/fwh
HjPbx94aC/i8vR9XDGqHmX8TrAx+YpJIlw/qrXixYQI7bo1j9cCx9BgxhRU/
13NL/wgOTohk6u11XHZsCK+dKUdO5knYhrdD6Y8cH82UYd/kl3hRXQePPj8x
Xk2X4+4Z85ubEacNNuFBr1nMWOvP7qTdrF28kDp56gzVCcTQGmXs06lAZJks
xx/ow5Rvn5FefAyN25dhmnYUjl8pxZ2HT9Hq2gn58peQzElA8u5XQr9RbpD5
mo5hz9Kw/1sevo6S4IPX2ixOl+KxC3uRYXMC1of7U8/RjnZmYzg+TpWz/L9C
Wf0F0m/2pnyBB89YHeWZ0Iu0fnGJjlNy2P4gnqWysXy/4RQjHtRzweE/jFkt
Jxrg+YduJ64xpngbnyRLcWjTKUTK1ENpvCHPK3jyQIU/H2Y5MW7cD6x9tQ9B
ZTVQHP4MFbMzoNqdinC/78gcp0rPJz1pr3sPEgdjECorYNtPbUg/cMUyn2Xw
aXogmN2agJSu3xhiZs2rsZN5f+0gVjSfw1k1Caz2jUBjym1ssWyBw773mF0n
xV3qqjTN0GRFWx/q+nbA8cwVbC08jmkv8lB45Qk+i70h5D9l9vzQg33330Og
9Snc94+Bs24l3i24CedlJVjmfQo9U8uQGvIfDsrqc0LBCBZJ96XN6PM4J3sE
3p/lOeOqKV87DGFCvx6UnnMLzSsiEX1tj9Dlmgo90QB+3DOVXvfMGKd9GX16
zhVsQpJQF5WHyMHGWLnsMIreq9B6xSBKpklR0V6bjpNDGRRbztDtjaxVauIE
k9tcsr+Kcd9vs/vEC7okdPHhDAlRvc1vDt/xhTaa73mo+QsdfSVFfZ8oihpb
NURNmf1Ebh+0RGm3lEQKH6RF8t7fGVH0nvt6faVf2B9aR/1jj/QP9L17nb5P
U3luuB8dVEYz4qwC+U2Vn4pNKLllIDcZ18LEuE6Y4FGAut1qnCk7kl3brXnG
RUQ/bUtOdzBm2xhw+6RlHKW2jUtue7BYcyRF+gZcf3caky0381B8IEfo+XBy
jYjNEgq8dUKRq3vb8um8pezcLfbWaA2+Tb+GEdNf4F1tTz6X/wXJrPPoXxyF
532j0Bi/H5kvDmD3s0M40WMP3CLWiudeA9vu/qxdK7CpciiDq1+jrv4EYpMk
OPfgMD76aMytyn8QpuiN8xUDhfHmi7Hn4gl4/6pH0UJJXt4qTzXfFhw2mYNF
ep+EQcPEZ3NQkrL1H3BjeCyCHiqixxZfhE5JRuqOOBxwOIAVG3Pgn1WBaLHm
ii+mYZPjdrTvXAYnXEDUPG2e6J7BzM6VXDRwMSU/jqWFfg8WqJ7H5j5xmDov
FFWbdyLIPxL29Tl4N6kC9haXMaP4EVz8VOmaJGKs+Sx2e42nxsZenHB+PxoN
NHD79xE09mtDibwUDao/4Nvv47hd0ihsmKqDbfkVmFXYh4XWI1iaZc51tzXY
+10Zvt6chQ35xbBw6UJ68BccbbmBMdvKEG1WgNYfC9EtAZyMeYLvhppUNuvD
nYeK4Vc2Gm/d5yC/YgFOabxF07HV3BaSw7jqKlbPPM+VQ+Ko77eQw8NE1Hnm
SYO4YwxJe8x4IylRZIWsyGVTJ++o3OL8mnQ+2BbDhBkJzPTIZr/wEjaVZVL7
ih/f+bRi8UN/LM/vREecNP85nodqRjZ+/JHht6f6LK3oy57nO3BqbB06hUto
vJAFs++R8H0uwst9xkL0N1csWdKCJbtVGHVEgTpzL6DzigJMb3rBMPg6og+/
x2qHNgwKfIETHe24FfEHu2t/w/jNIzy1ikbIuiZhA22Ef55aUDT1hnXbCZhM
vYFruyuw0iEcX3vbY/iNUIx7kI74qxdQvKgLnhvU+VBXjuvv5CJRsQB+Dnp0
P27HUSGDWNjvMPwOb4FMtzZ3tE6nZc40UmowQ6qewH9qP4xcMxVfB3QjOUaP
EzUUGNevBi3zlGjR6MjtsXM4IVmdncsioFvQgCUZirwz7QquLo8UbIu0mVkS
QrudR/hkwREK3od4VDOZh4JyOLS2kltzH7Mr9guVn//kxPGdjMl4xVdn69il
W8WbF6/T89YjrlvRxob3H/l85mv2mnKXdVLlXFNwmj1SznCz/jmu9TzNz16H
mfLbk+tHaXFs11VYZizBjll78fK1Kpt1FnBr6UZmXXLn/P2DqLfpIgJUXgvq
Wbo4GlsH511qzNyowTL3t1CbfB71o7+h5mNPnsyrQ3XfAqx2MuOPyHDOGJHJ
MU9y+LMzmfG123i9xxAKRvuROmEOPgd24cnRAdxvO4gu05VpmfkF1x5fgrVT
EeT2/EHbmeGUu2HNPWa6bB9UhrLx94SYzAEY7piAydfv4/k8RTYnD+Sab9p0
dX6K45rWsFuQLPhkrYdcZDTWS67GnnB9zJ1oCMv5vpBqy0PZ5HYEvO3F8PDe
bB7/CTbdxxH3TUD8ClnkR8/GELVaOB4xoskJF045v5rKivOonT+Uh0f8RuT7
GyjWiUf9tVmQyz6NC4d78b/jehQFSrFhkT92OOlg1pR23J86jH1axnDmDz3m
p7wA122F5clbgvemOqH0gy6U741E2Pre0C6OESR26kLrvwRMfFIJteazyP+w
AMEz3a2Vu5bATboCZ+8/wWO/W/jklgaFP7Yw198ubHw6EOeu56LkpgRRP5Dt
88dQ484oLljRh3OvZmHBPX/Ixz/E1lkKrIyS5WH7x/i9vxCvLLMxVOwFywb3
5BibwcxWHMS5bm34FbMP9888QO54edYG3MKp5FLr5bGdsJBz47dFmzlwzTh+
P5eKjgkqUHhfg+irRVAeZ4LgE705aPUuhnUdJ5bls8sum4ofjjO36hgfHM5m
tnUJU8rOcMHkeDZnW1IreRCqludh+kd1mtnIc8XGSLzq0Q8bG6/ieK9vODqi
GRujbiHrvdgn5H9g4aAXeCqfhdroSXhzdrbwWve9MEF3CZabeWO2lwwyRs4S
agw3oDWxFDIa13D3Vz5+FR3AQL0QrPc7gGUe+fjjVwxXk70Q7ewSdvbbg5DE
dvgtUOAdvw74JYrnsWIBUuqUMPiPozDgoiIGlpbCKOAhnNZpMfTWSjprxHOD
SQKvS7ozvyob5qMvQNVuIs38lvBTlRnNnbsx6qU+O7Nn8kTjTF6JHcpp075i
tdURLKkzR8cxH+xZWIN6HWm+aTNmqMlq6t6L4e6hsVRRWkqHDW8w/8FOLHgp
wc1iLUV80Oeul8a0fGfK9sFybEmej8O2GQiZbshcexHtvulxhJEKJ0yZxoH+
O7mucTOrBltS2qAYZkXRsNknST9fI+4qNGbLYDUq2dejOG8tyrKX4FRhOeoD
/yHzax8arJFlZVsDNl7Ix85/9zDl1n+4oP4WzlPuwvKoKmW3zee518HUlN/H
bZ8CWO3ixlvbhlPWSNzBxVwVvl2PfyeLd6+hG08vhuP8611IRwZSDBNR+uUx
YpRt6WgRQv8XMVypEcbOYd68mL6AI8IdeO+OMYcPeQqziMXIvRYIz7xrOLOh
G7Ok1OigZs6quCVcNiuCR2em8ZB0KvfMC+JV2yHUqdyIRScbhdE3YhHgkYzZ
OwKQ4pSAzOZapGl8htn8j7iifh+rCwvhYHcQU9224o3uVHR6mmDjvM1Q0ymD
ZNJbhIW/w2qZq9AaE4OJ7VtxNyIRM/xfwmWmKQ3C/WnukUI3hVz+fZvBtX3D
6bJ3CnPSVbn/pwztvHtynpomTy+cxl61YYzLPcKZFkc4a2gwA7IMmWzojJtW
MyEkv4FNlTzfJkqwNbABysXif3p6FG2uJ+GvdQ0pae8RP7YbM68+QfvlQ4i/
0Q8vK5dgpuZtXCmW51EbTe4vl6f03evwULLF9yoNoTpVwFGfWEybdRot26/i
WvI9tG5/hY07O7B+3Sdc6lGBqMCNGF68B9dL72MzJRhR0wHDqdeg/zUNc5/k
wKBbnJGr+vHgxpFMkR1IvZ+yDLijz7HTlnCESSCxexkbq1ToXWcLvY09cXPl
GyFN1geSBuN5ZtJxOh65zbriu0y+UsiJr/x59YMaZ/vdRmbMD0zw1hN3fHPK
TCb9105n+cmF/PDMiRJ9NOi+fRpiA/di2SsNZpmZMfKMIqMD4qF70wOaW48h
ffM+GD9XxJyeoej60oylXh3Yq30LkmqBkDoggZg5OYJy3CnB9LmPkNVPEmk/
DyBfzBCl83/h4LZ6uC5dCbOt+rh3Jx41A4rxoeY0pqdWwnxxE4YE3EB/mbM4
qy3Ft8oCY7c6MX/dGFK/A+/dV2FT8mNhgu1wKLyLwEvZLLRtzoT0dRkOCdhI
+ZN5Yh1fYrBlKt/uHsSR/leEHRXDudPbh7XJzpS27sOiL5/QFKVCx1AFul1+
AOuAZ/gQLsX+c5pQOWkoSmpmo2uTJD/uAIt1vBl/LJy9T0TS3G4l+U6aHz6P
wGRjeZ7Z5Mne9yK5MD+OalZ7OcZiMXtHuFG/KZ76BeV01LrKGYkZjLy0mpWv
zHhi01Cqh+lT1lfEFWcO8uq523z3/gM7W96ztOEORdvyaPU7hZPGHKecTQG7
T5cyo66US0pPM/J2Fp3D0/nH9Qg3vEjkqPFRPLduNaM3GHNu+We4dUiKOXEY
T1k6sFFrCStkltFD24Wr79nyzAGBNvZTuWXtHP6dP4Uxn8dw8TorbrGZzH53
Z3GztDttBviwscKHZb52fORVC0/zIEy/O4ztdzezTj2YYUnu/LCnL/sOisfs
wAQhMRFwN7kB5QcGzF/uwaLaKI50PsKSmBRWJAbyyysj6jxdgdqjilg/KRc7
Wk4jQcIXdmPXoU3lHm7u6EWPbC0a2mtx610NPjRTZ9N8aSqoFENv6w/B8dZo
1B6rxLLydsRF1GJkz+3wOX5bkDogibOGi+CVWA/9V6N5zSiAbZWHaeWawrjO
cErUO7KfWSc2fNiN/6pPYffVX5hva8hHVfP55W0Uv1vmccfuMu7ML+CUx+Gs
LRvMYVE+CM/ciduHXqNrlAzrmrsR3/cuemiewLjgE/D/+R7Jrf258L4Zkz4M
4jsnGe5r+4VmTSN2L5zBpCcu9LoucEJTBwyGDYdSo4D3Z25D5eY/NEp3IHpH
GZo3LML8HqWCia0aDtwLguffYygxSoGpfgiyh+6HR0I5sqWfQbdHM3YtvQAl
gzDM3mYDx+4gPLxyHXuz2rHpxXPEfv+E9kVi7ru7k+NLYvlVLpK9fRezLrgf
ncrfwtpPnh9+LeG7lQUs1fzI+lW9RD4RKqK/lgqiBPMuDqh+wMXO5bwTm0Oj
3ancNjGc/xnO41ATZUp65sKodi7kkpYiz/M+lBINaCoLnrMZzretUuxp+waC
pRT34A8EIQf93/VDX6d9ONl8DdIHzyFJZg22ufXAo3dEt48HEj7bQ365PS69
zkHGtJ40u23El4t0+NqgDErztIUS2RokxRhSe6EpD+zvQ/XbbTiU04Ej7z9i
4JabsF77D6POWfHh41n8PXUMFV98xNO6AKSXrMBB4wCYesXh9alQbF25FQZW
4cKq8X0YeiSMa//LpsGkNI7NmcLGmB14+1uWrpumi6v+WDaFV0KzZ7oQ+CUQ
YVMnId/7rlAz4gP2PRjJyOzBfPrnPGK9xgpp2jdwokGJOi/7cnZ7f24V59yW
niNo8O4L+nS44/KgH9CPW8T60zF8aZDCH2vjqOoTyZEvjnNRdgMjV0mIWhbJ
iZxtJEUz9d8wLOUm3+efZfSAXM6tuEaF6H8Miewnihg4VNR70kDR0ekqIlUD
KdFO2Z8c0/aHz4wkRfdXS4hGtndz2ol29rJ/wl0ZNYy6doFKE7PYvCuWoj6r
OVB3CJsO3MUFcw80NJ4WWqRVcN8nF38ozcZsHR4v7cdxH7W54sUQDmoSaK1l
x69htky/MYWjChaw6NUq3lPezPqkndzyYBPbmuew99ihFPU24ZvKpUwPDOW5
43uYW+TJ00GjeT1FiysiZVkk9gjzRC/8mDAWMmGliBmqwIfFQ9mQbcIrP8Vn
ufgkfHatF2RVtyIusB5Gtl3oiJDhvU/q3Jk7kPvH6XK3rxT1gt8ic6YC57gZ
0SFjAOf+fg+tQkvsWjMSv1fdweGhUtw39B8uDviMvgodCDVpwx0x7xXZDkK9
+Sk4t8vTZmZ/3k/szdPl7/DJpQW+XS/w9ehFFM+Pg83pcmjrSjJhoAYn+Juw
50sX1p4Noc/HKE6V28W47DFMSxHn1pwUzMt6gnEqP1Gu+xqL9bKQsMwIjhVn
hMuBJ0DTnpwx34CzHLRpdrknFcW5+M/Ujg2u7rzR4kjPOcqcHOuA8roJWHpM
khIKwxnLwTQx+44Do11x1eWnYK5/GtqrJRn5UJV6ar15oakVEaKjyA0MwEyt
IgRlfIP8MkW++q7I/7Z24qLtaVi1AQ1WEYKLy1HB/cxR4eP4Zdgc/wWzvC0o
0ndm4d65lEq0Zo+l2nTJU+ThyUa0lPPkgbeJlIiu4M9BTXw19TWR9IY6+15z
iVMrj89o5wLhM4tM2pl4rol+g8r4bncC//vtzXEOk7lq+DjmXrCjwW8Rdav1
qR3egmHhN/BE7NnXhxiyNUKNj67WIvbwISj65CCz70lceuMKt3mWiO9KxIUl
F5Eg5oD493MhG6GIqupjsJgty7lOA7g5tBe3fgnFRuNQUNybN3WsoHblEiqn
9OeQf6dgmX8G67bdwvVd4k6Utg4Zm7owMF+HSct60OxSIVpnZyDCqBSXdIOx
0VAN44Pe4HOqMUfvV+ciq2Nw+/sTl1OdOer5GkpMMKdoZw4S3Moxs0qBGqc6
wMRkKP56hKOKffn3dU9mxVyFxRMZBnwjf1eQsWu/I6WgQ7gdlwePD79gXVWF
lpRLgpNmKFYu+IpJ+A5Jz0yMsz4O3Z89+dZ1FA26xnCzmQHbDLXpLuFCm7I0
ru+sYXD5S05a95r3fj9k7rPLLPU6wTnBBymfdYqZj5+wXkZapHWxp6j0RDev
CY+4NPoaA1Kvcdela5weVMHHG8+z5kYxVf7k0uNOImvTAqi4ZC51VMw5wEeV
JirdkHsux1cVI5k+w5Hf7zkyfMIoeuTKU6LzNR4EP0PR6tvYvzoZhp/X4JHn
PqhJnxRnUy6q2koxX6cZlf/J0HK0LrPfjOWPYBea+Ppz+uZwyp07wN+aMVR/
tJPeHaSP5w8cfCJBuS5Tbq+2p/Yqc2rK9GaguIeb5dbhgtUFNCyMhnSRLfop
qSJedyiK5Nfj+9EjuJxQhmHvnmDi+V5su2fCDTOtGWpgwM2vLkNbLUpIGHEE
2wJ7ckquKn9qvIDttllI7j8KfUecwxaZrxi8TY74058HrS3YsGUUMw/2pnVt
FtKknPF4exA+2QShOSwHFzfo8YfxCqaEB7NGZh2zqixZ+0eZp2z1uUrOiJXz
u7HD3wxGc2yxce5L+I6ToZ96A240bYH7lvVYXlSIZz43YOxWBePAiwjeXQy7
WZn4duAUFL5XYkXmHfyMKEXEj+O4N7EBWkd6izlOk4LjF9RmrUTV5lUYqiJN
rw0WDJO04vDdSlxyLwqPM5QhVdAClcIRHBHlwP+KplGhQ8xmfl+gq70Nw3a5
go33MeWHuAt1W3Le/nE8sXw0bx/qxwi1Ltj9uoCWtBQ8fpqIM8+Skbn+EMZo
7IecXSAcHT3gN9UGNoIZLNvH49Pc9QjoPITo6Fx41mfj9ZAkLHNJxcriB/gx
Wp/Zx73oicPcUnqOD7trePRADe+9OM+bzUd598peiib6sLndmW3WEPtkH76N
jEOSa51w8fNVTFJU5ag8NZ6KaMK6YyHw27kfPvfTYD50CbInA2P8y3FFV4I7
rH/h8eULuPRjNibU3xKuJBnj3pN0WA15hFv552Cp3xP9BxTiniBwio8v32q5
cfWhHhzaFiakWJ+EXXoXiidfxsl4Bdz4sQ0bQy9jXlopHJfewPmpvWixVp0u
nyrxeu9DYZ7RABpUBPK0WgzzPnpzd7MSD46vwtHgb0j1eo2F98Nx8ts0zDt2
CMkWJZipL8O99yfQ+c0qpm6dyz6PVbhN5gVs0jS5+d4gqu58hWatCdCe8x7V
LWO59/IkevUxZd9wdW4W+vBsrhTfeVVC0cwBQ7LWCw8+7heuGY9H558M6Myv
xX7Tq/gyMQvnLB4iQkaXDnMn8JfDbI55SCaIZ7NvzEBE+WchzNeYfWumsq/8
EBqaVMJqxWfsmj6RIy3cCEMjFmrOxjvf09g9cBz7uiyn/jlHfuqnzBHBlxDS
JxcRfY9gCvOxeoE6lbct5dOo/Tx8JpEZS2M50WMXI2Od+XKLwJsSxry4WZUD
T7dih3oBtn0/jCP/UlHdXYQF0o9Qkv0fCtr/IiWmEwfy5fh80liaiVnJMngv
M37s4fhLLnw3QYLrZIeh55arqL2tz6tLLThG05jdk4bR58cMzsvfxsnSe/nZ
PZj9grz4ddxohpZLcu3cIrzZGAjrgVaoONYLGRFhqF/1GuucldkerMKXlzoQ
kXcdsl/vwLx3K+4dfoD0u7GoGtsgHGotEiZFOMDgZAScva7AdoAcD8wYzCGG
xjzVpUT1+q84UN6HFarkJvfFXPF2K6Vco6hilkbFYcfZXRBNg+b5NE0w4o+X
tnywcoO4Rwby9W4f/iufTJX7A7lbXYLB43Lx9owOdIzdhDXxamiw9MGL7gvY
f1CGlVP0+UthEB96qPDMjrdYrZ2BbitLFItuWW8P/id8cnVFzIGVWDVoPZ7J
nIPSLnn+lB/KI42DOfSMJL+NCcDyl0VCSkAlHnTp0vHFOO4xs2dq63BmR/+B
tlibCZlvBXdRHO4/+gFPswH85zKaM9yt2O+pGbMlBnD6KkVO3tOJsJMfsUJa
itrjVXikbz8WDehPu0larC9UpN6LDqTNq0GFYi7uq5zF6fL/kPVcYK/3IdSx
zeJ+q0vsqVHGmmtpfHrFi3/aNJlXr8Kl8Zac4j+VcwLs+eSOKW9M1+aJYHme
LOjEtbgq7FHww5u8+Riu2YBkX3WO0tTkII9HKO0pi0k1Rph+6CR+OR7EhDEZ
QsKYYEhaSvC5vTrf2neIzzoTb6LOIO5wA4xSCmA/dzDmWknjUsA4XBqYKdzu
XI1JCvLMax3Lnk4jGLymDd6vL+LLTA1O62HJ7FH9mXn3Fq7N34+IuERsXZOH
Bkizw1mc0/Oms9hTU+yh6Xh2VI13V4Xw285M9jBJZ4jtNnYtUOWIcWLGemOE
1sAW4ZLLSOHl35GwysvDWEGFkrGOtHDzJm2cueWHHKVcgJRbqXBWeoMQpxw8
//5dGHvsM07/dWJM0A7OltvIw9Mn0yZGicsWXcEgg0isnRGGK9fOIXaAMr2v
z6fe3mimaJ2kXPVJys+LZZH8aqr2n8i8HlNZ5bSY4/7byGzjEAYviaTro2iu
OxVBLcMQeoWHc7NWJmNn1TL36Sti91Mubr7MH13Z/OZWTIVltdz68wGb8m4y
uH8Jzy47xYBzyYypCqbyXzv23a7F1n+jafJyBVERxN7Pg1gyYR3vf5tL678T
OVZjCr/2duS/linUdhrPjtUiTv8xlX3+evD2193M6oxkwoto6oQEMm+JLS8t
foy+v1KxoUuOFyqtaJkxmfZHx/P3UkuuFWtSRbwPQ927sel0HDxu3IXFGxsG
/g2j+64j7Hh4nFFi//Hz9uSE0D4sifTGbS8zZIozQjk6E+MdXFBh9tVqcqk3
Rk59DcW+OvxvjQk9bhmyj5o0W1alQBSeLtgkPBFG3JyIC5rGWGU3Qti1uifa
hh7CywE3YZtwDTGmsRgw6iD8ryhys50ry0bu5bRRB1gfEcErZoEcucCXT5fO
4rqPWgzdUIbEcz35JngFI64e5g+LU5TuPMaNdRE0sl5IV53+lK+7g/axfvg4
64KQfKAXWqfkY1uLHNfUGHOMrDl9xLxi4SnDlF3XwOhoBMxbiRGvfLChJB45
H25ixFNppv7tx4upBgy8LU/ftkK4ZxULwT3H4OeU69BVkObjNHnWB/2HJ58r
sW9YEPTX6kAidghSovcho7kSi2vbsDf9J+Szf2GNRQcG2b9F6Y+7Yt4vgsPw
Y3AoOYujF9+BG7S5SGUCT3atYcvFQB4xDKCDmydPOIIPt+jz8tUhrJ7gxfHp
p3hVvp3qV9VEqgmDRQN/DBU9UO8nui4hJTridItxBsmc83ETdW/PZOclC/5p
7svfFq1QrTgO2R0bkKy1Cw5hZ/F3jAzfTDdmbB8LXp6hwYsnqvBFpwCfl/xB
2lYFXpxYhZsx54UPzQkoGCnNSyul2X/NCbS8i0J3Q0+mzB3OybP60ufoSSTd
H4Sj9WmQsc/CTwMLfNAdgHEhF9GS2YECS0naLdbgldVWnLnNjj4pAzn53x00
9V6Klest8PKLO5w/tuGaJ+m92o3rhlmz+2EjzicHQ+OUCXsf28NXfgk0v7WH
VpbkU7kqZAz+J5xemS9sH9IgeLZIw/T0XDRZ5mFC+m+c9dNmnZc6P1g9hKqK
P1Q+Z8PY9y3Gv63CGvWvwpH5e5BepMvI5zNpe9KBNNKmlDg780XV1p5z7dHi
m4Zer9/jrq4V57TvYa/cPEon1TDDr5FyQY1Mm3yXTe+usfrFRTr9KKP7mytM
/lvHEeFP+PfvcwZpt/BF9RuquHZz9g55UYqxuqhrn4ZIN19JlFEnI7Kp+s1z
Dn+5P11CNP99N72D3lJ9TBMXjbpHvz9XOKfpOOet9qKDxA+MSF+M2dcCkBle
jHeXnyF/zlfMlHiFw7X3YaT0C4+m6TO9woIvj45huLEVb3yfwpk9VvNF1z6u
8DxOi7dFNNErYoZZEucMdGfPk38wPeoBvFUNecx6Du+JltNg6lJ6vZjBroKR
7G0qS23702I2EueX9UOscR/E+pdOFD0Vd8vt8+g/xZB3xuRC3vmI8HVnBRwf
9qPifgv+O2XI4F5fcUXiEHLSijBPR4ErdYbx7L6h3HSpB+1kT0ChfBUGOh+H
y4pKFFqehVNuDK71347YeZHYsjILWbvPoXpnqlgHZtD5tw/PxQWgoMaRxl/n
837VEE7/loGvHQchGd+HgSMG8d7kd+i78rjg5v0AHnFzaHduL4WzUZzmsp1L
LSZxtpoKCy/VYcWmBDzQX4bBM9zxWBSFENVSTBFnnXb1KwhbnsBO+Rp2dGSh
fvBBbFOPgtGtTCSpvEDLSGVWLBvEBxW6HB/djtkjpyNc9bMwLOQWbJtUGFKi
wdZn7xH2bSVs/9MR6vuFQV++AfWK35GxtR3D82rhm5UPM/UMeP88D/01rci3
kOO4vD78W/AbHgdOo8p+OGLOZwqyCTYIzCzFbQsddvu7st4zkHq3Amht7sIY
V12OU3oGzYUNyJyjx8ODQjnk7S3mzZYVncnqJ0qoHyCq1NURlQ9QEN3s8Y1V
exq5tLGGSnlXqfvrPPeaZdLv4z7q/ufMuZ/0mf9Wku/uS7BmlSpfzjegi5IW
Hyb9h/65bxAeo8EnPmMY+Go4X317CYUPagh+F4nK349xaGQJdBdnC0kKadhp
YsBberbsFTuYNZp3oPn8JI4XSvDrJ1WGLG5HmvFujOyxDjXJN/Bl3E94uMnz
2mhl2of25JyN19FmNQzXdjsJs9J0xUxwWzhdsBiRqZIcGj2ay8tGUqX1MWLi
g2DxcAFur+rBXa3j+GfpVF53H0JJhxcYnh4Lb5Nd0FedjVL7LsFG+6zw/ulr
Yc+vv0JJ12xoqmTjlF4L6vOl+dZYnR7J/Ti0VazJP2fRdaVcWGPkjCeJpdhp
kIuPt0T4EbkZoj8v4W0hw4s9G9DPYC/aVzZg96SRjDq0jMlLwzh7djKL0vN4
7GEJH2cU8UvcSbbuOMIS7QxKXMmlWmsBzy7MZ58Xp6m94DJvLr3PisMtXNr1
kt90m6m46B7Pv7jOkneX6e1xjk79szjONJ5HDfdxkEwsnVWPMM8plWk3Qhnq
4EDJDj32SVJl8YVeXF4oz98Zegy7O5rqIcM4n5/QaG6OzPZvgmvBHjz1CsXZ
nktRr5GIN2+b8VxPjZ8+TOT9VQF8lhRP0cpEKjtFcb/FNh6Zt4oD53jRMm0e
3y6yYvsJdablSNEgTpmR6qZU7bLjwBXj+exLf8an3kCbmQKWz5ZCTVc43i5P
x37hBFTWV2PfGnkOdRjFAeOn8ctUB66tHkOpz0p0jqvF86YsBB2+jNt3H6Hv
33rUTLuCnvbXxB2xEe9cn+HAl1tIWl2AKeMzoHDiKpZelWHjk6F0vzGWV8oH
cpdRM+607sUXhYuIGvcVxy9/wuQceR47PYNWOvt4dUkCd2iHkDvMOX9NKjqc
5iJGtgKuCx/ipFYZ9useguyazXi4zRInlqtinc9chOyJQNevvWh6SfRJWCCk
j6kWdP3m47pSJCbb7MdwpzX4njwSeQkeiHU5j2dK3djgJs1Qibt4Pt4GK3/v
hN3r3qzuZ88XqZO5cIgmf1SG4XFFEETjNKg6eCY1m9zZcHgi765RpXtbFl5Z
TUTg99MYIe6yGqumcsB1X25/so2ujUu5vG042/3vY5OkNwJ+DYTo8FMhrSsK
azNlKTXQlMvOGfHDo0com3FOqIrxhE+vcmzYF4fxXU8FnYmPMHrNZD78EsQF
rdHM/RLNlh2RXOmwn9svJLH/8wK2hl/lrIs36TuynE67UtlZ4sOADmMWy3ZA
3agSV6NPQyciC17ZsTAPjcMA+xc4WKDLbPURNCxSo8V/eXg1oU6YM9EXbS+O
wll1LV6UjEHh9joEv9YhPY1Y8lOKNqOP4yArkGaqLmY3UzpFGtLYQ5oFVjWw
F/cJX+dElMuvQtWEEZixdzBGKoyEXeRaZE08D98Fn2GQ9QkWgQVYp7EGA7+e
xa9+3ZDPbcN2TTP2H25CoX8f2hl04kxlN5JSv2NwUCMSP11HyuUKVKkl4ky5
B4Iel6DZsBdV5/Wn2/NejO7xHMGFr9CY2IuiZf2YXq3Nlj29eexDN9y96yH/
Ohu/ArZAP3c0vPYXoURVj15PHXnUzpGdkzS44VYozrzZh83927Ez8yn+fRsL
acNJsDskzQY7I7pe7sVh04oxuPM1RHeMubzFgpGLpfjz4CzcWnIBXh5GrFUj
vbq02ZB8CtebffD5v1c4lKXMxQqyVO5ThsaAtVCyLITQQ0nMlSKqjJrHR6Wz
qb3Zlt1r7Pljswdrx+6iTmUId0mGU1U7jsrvUrnX6xArem9hUuIQjky5i6+3
83E7shKj7/7E2nuDqX1ExC3rh3HFuacImjQbVx+UYwl1WWIyjbIKa1h3fDvP
jlnH6QfsGBndhXZhOn6sXYjaX83wbhpEI9k5DJ+2gcdytjOjeg0H1DrykvYo
Kl7Q53lq8oOeEqfaSbNk4ScM+9CK+Jof2Onfm+PPaFNJQpMHFv1BSswxtCcU
CSsFPRzJOok90XdxcMNdfLtRht43TmDugAjUFdrAOFcDcnnJuNzWk50vydU3
3ek7YAnlntlStl2RrUEV8FJ7h6kypP3iPUwOPkEDvRL26C7iRYkjHLUkmEZv
ZlFUN5DXur6gvaEeT1KkKGOlw/hnKjT5cRsWpboI8y8T2mJCENtViK2jb2Gh
8B6fT0gzWUKOKhp/cfzvQyDnKD6VjMU+02rrJXdVMEH8fZrpQSy7vxlrylIx
bllvfoufwtRt7jQ8I1D+XC2arbfj66NBlA/azGuifTRQ304PXyt6vLuKyuBt
wpr1URgkyPHcRRsmBPlxuWoko1oP0GJiCB+WTuKM6nY0q2biX+hzLPv7Fw7W
XdiY2Il39r/QM7wRfWLz0Bkvy6durux7M5Kevw5xYL8DXLw+iCOV11HqvB+r
/wYzfXgkDf8LYYhoDtMMlShvr0ydPzOZm7CV47T8WFdixw3betJpXzmUxV13
2jF/bJQegZlm14WWry+ETRvWwbe+HCqzXor36R7Snu/Dm+xkoefIt8K2jAW4
9NIdhUFLcPVmDhJmf4a/oxR/iTv62QFboBilglUGx7Ct4xtsHJWZtqgvM8Ts
fbr4PhYqrULxaHth65a50Ak+A3OfRkzXfYHf017Ddt9fvM/W5uA9I+lgMYwF
i3+gudUEbmudsWSnLINnLeOkor0cWSrW6y2BlUGfMac1F14SubAIuAHX9U9R
UH0ZU3+IPYCS3LFjBv8d2MQ5qotY4KbC4dUBiKg9gdRDrXg5+gHOvSjEc4mn
oLwKnVP7sbROgWtHfEJVogKfhJNN1otp6eXMcDsDvpf7C5Uj5Je6YE7eHcdV
Kw/wink4l94PYoX9avZ0Gc8vc+wYNieEqWPTuTQkk4GiBD4IDGfq61jKnDnG
L+9PcFTkCZ5enMfFPueZ8/YCD4fls9j4BNe9K6JKrzq+fNXC5QmPecv+Iq+X
xvHmdU+mKU3hrNXzqHRzHT8F7qbr6gBu7BHCvqsOMCcvjT12pzDy4x4WN0/l
sxBdKq3sz9j9Ih4P28T7i1LFDHmOrjcvso9+DuWmh7LikjnzvxZBYvdgSJhV
IitNvBc5htR+aETDHRaMqXbihYvuNGi356/vvfm8vBPaGRaMOLWJq6ftZ0jO
AU7w3EuF+rUsL7JhdEhvKu8uRliqK/6usUTiKXVseCMlPHs4DE9bymCk+w+R
NdJ8ndYC4+HluOV6CYklF6H6LB7jmiZhyxZPzDGKQcODYPT6Ng8HLBNxy/s1
Gs/3oVHxYP7MtaOSwXy+Xe3ISQn9OX7uK3zbO4T3TwdSdlkaD0elsW9WGDes
cOexV3Mos9KTqzctp8lKD5osE/uaZhh9tkRQbdgm5m425dT5Jch/2CUsG+uE
gnNleHK2F98/t+CQpkm0eSpiwVx9do7uQN+1JWjo2otoYTK+nh2MzB6O8DkT
hEtF6Tjl1oKTkVoc2GrBRA4TI+NLTPfXwPmMNhhFzWLHl118ddGHPgHD6O+Z
iNphZ4RbP7LQqtWFq716Uy9bh/OMzVl7cha/ZXhxfdccXursy1bJ5Vi6IAJO
9zUZ4jWBw52mcly2FZPF+bG7Xovr5og5LcCFDc9jmHPlNAdp3eSliY85edJH
mirIiKxuqosETUNRQt4wkc3ygaLyu/Kimb632Fd/N8cuUeSM7NM42uswxiXn
4uLJT5inpsYvplrcKSlP21NvILmvCm8szsEw6zy8KkpwtfYosrbsQlDQcnyU
DcIt5yBx3yCU/p4TbpyxhdynfHw3f45+k57BUycHXjOskTLglWAbOBJr8u3g
ftMVdmWJsLU9A7s5kQj/74fgee0oTMRcIDK3ZI7WCM4f0ZPVojKsOZWAcxNu
wG6yDjNEU7hl8zTanlWm9dINmBQpySe/p/P5umgWGB9gs8pSbvzSky8eBWDD
W2XI3PTHjJfXsN2+HgulU3CvsRk20VOY9TuA48v8uGZYf9475oWqrlq4/Vaj
qn0H+jsbYYiP2K+ye/L97wH8M7cPD9y7g14K5Tih8wuPT2qyPlaJF23r4Pzs
NX6qz+fW1iP8VHeF22fcY7zMPZq5V1N+5Bm6L0znUNc8LlxWyytTWpnX9ZbP
Yx9z24V62lU94oVVLXy2p53DdkuISmb3Fr36qSLq2iMnch3/mWNPvuKug//o
G6wiOjBEQ7Q9TE5kMvoJexw5zoQPQZzsFEDpF0H0HbiFmZzD0O2GNKyU4qKa
XnQpMuaiqea0jNWkVp9H+DT9PB5af0TAJj2W/XSjhFQitztVcsnTJlovf8qU
nDs0NThDx337qVc0mT57n2Gh+kvhSI4zrvxVpLTmCh51TOAzo2NMeRLJhG5r
psltQ5mYZWf46vHKl1lMPuzBG5sXMDDNhjft1XlZ5wiunB0srMm8g/ntI2k1
1IEvNUex/717uKJgiVvSdQhv1GC2Vj9+8viHvrrnUb/SD74DyoQv0cNwRqsS
d4ZIM/yGAi2XKlBkp8kaUz0e2PkXM9dsx1n9q0h6Oo7zJvjypcE8uhp+g+YE
E8zsVuM6aReOTnFic5s0z3cnCU478sX9SYu+mSMYGyLiea+VtP0WzvqYSEqs
W8tlxob0flyFhi8heHR5Bs7eDcNfu+9oejaUshutGGhkyPk6X/HjezxemU3E
2YrpiHffjj3JB9Hf7QhO2R3FMNs0SN/PgCihCN5HC2DQaweWV/YWpG+Ewj9a
kW5LxjCzfDiVkx7AMauXkPa1GOts+lHFfgh5R5pjB8eh7Y2AXfdPYsml35gc
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
U08496TBODkX1o0n0FeyBxHNbujP8YP40Cnsbu2E1+IJ5B+uSnRUg5p/yVC9
+jtEP8yE0NNE2Jy6h4iWQeQa/MSrhJfoFnyCjsE2nFa7BqHuZLgNn0KxbR9E
U+bTqndF5HFNnKtwX8FJuMdxP7+WcSaP73Oyu55y5ge7OLuvd7mmsjwuJD+Q
O8W0uO+pV+iz3RJ6uWcF8Q/eoCv+upz9/kPcrC9nOHarjKuXL+COf4/mzsgs
4EyCOum7/kQSbhFAfc1lOGQV4o5xJd6ZfsBhw5+IXXkTQ1e2YUKvEaz7XDB3
wTJ49U1Eyxh+1J50xPbm49gVVQzJpfXwcniHTyMjOGX4AW0Xc3H00CDLd7rO
Sk8dwMbnSRD44Ys/Kf1s+g1p9uSoPP58XYVN99chdeJCzBK0wovE9ThzbAeS
Oi2ger+ZrU1X4l1qDmAvHIKYzKtgdkVTB88rj2J1fR7WWxZDcyQbRZNzoO5w
CXm/OiD36it6nQchGtWC1IoENBySgo27Brs30s6Tkr3OYmpX4PKdU7htUQGT
jadx3dUNj1e/Z22lrqxpMJkdnSWM5GEGVaOlo3PJcOmjBBYpPWJHC/JY3Mc+
dsxvLmr6PRDitw6H5VSxztOfBXUKM9ttN5lT1E+mWzoGU+aJQadcHkeUx0Ol
MpHJ+2izJcdF4NFhiK3lgpg4XYYte5vPHITrsccolnzFJbncW9s4v6JTXMza
Km6G30VuXEc6lza0gWv8K8tF/XpDkbmSHJR3c18nXuRGVD5wPcb8Zj38Hzjx
1kIuqFmbm5V0Fie28nNpdfpciaIs1159luquJULlrATNmiRBm364QK9wGs0v
Caf5zaF0yFeD1H57wSy/D2pSItTjfhbRDrtZ84bLWO/5Ajz7aOx4F8pmfoqD
3p9idAfaQ3lAAtUVJXh9/yESnsVjvm81G5e5BYnBhRDckIj+L2LgbZzH4lV+
sKSbPcz5Sjs7WKiDNC09SJWWM8/ifPaidz62PtmAgC86uFB7l6WkjYat9Yst
3WHJfmf/Zu+9tmOly2FkX5iNl6UTWPOzZna7ahoet0ggS3Qu/u2/zFx2pbKr
xm/YkN0k8HXrItxdAdri5azNZQITn3+fzTScgOGvY/Hozxjc3DYWTyd0MI/G
MSzCoJY51VmiJn4vOq9uw6q2Wbhys521SNqyzOIm3muXucy7cwYL+L2Op550
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
flaFw4toTVi8tAH+x3B5xwPVhXHczl5lRvYmWir3GS1poBIlldXelLbKFrKK
SERJNIhQ0iDtabSkIRUtGlQaeF9/3P/O597zOec+v9/3u7xcGyVa9XHrdU18
lamNX54PxLQJn8C7qBbWhUpi99cBmCCdAsue7YIHcUOxYKgnyv4QwQuXO+Dc
h1bcXTiLvj1PpnF5p+hL81n6bFdG78ecolP1x6haroDEq4vo8tWzFCR7kXaf
uEglp87TxICzdMvxLHnu6M/k3xfpweuLJJFwjsR2FFFWah7JHz5Mjk/yaHNq
MQWWV1Kc0wV6EXqKjhYkkG7jDMrvFaO+a/FoN1Aez4gkQMDSFocaqgVaMw+H
PFmHcSvCodijv5vUz1D6VT2OFl/CHnGxvK0wkfMUd7D5xFG8aVAFqX5zRqXQ
3+h45DL+kJKij6u6afgWL+69lsh23hlsdzyGR06bzONi75PFmhxM/XIHrzYk
49oMExr9tpdygubwLorl8Op9LD42ihudXLn9oQibJi6m5fsaYP6eBISZmWhX
I4+dN5aAa5wR3k9WwWaVVfDe6wEMyDHDP10GeHH5VYheqwobXl+DFg9r7MuP
R3HP33gl04VObEwj8eTrZJzUSqNvfqEl11+RZVwllUnHk1/7ZPqhrkpPFknT
+ieW5C+yhv7VZxIVXaQO3XvUkHedrkWfoNqd4XTlCpL8I3VKnmxMTZdWkfrX
09Rx7ytVjVRhiTs6/CFIk3cvGsDXVVsoPvkcrVc9RG2q6bTGPYcOXiikRYcr
6HvwJdJxv0Qxwy5SV/UlCj5whdaW1JDps0q6d+EYeUZGE7ROpDbnb1jutQDb
yxPgkaEE3ptkg7X79VFsTwn8Jy+KX8pa0L/Ejzrtiqh7bgtVmvSSSlYPGVW2
ko/+TTqZU0I1e4qprPQqiee9ovVaX+nu/DZyflZNKxJ3k9MkQ4qZdBnNna7j
fwcs6ObUPbQ+7Br9V9JO23J7SSf5H/WZd9IfkQ562/qN9tX9oVd7e8mFv9MZ
xVra336A1qeNJbEvGSin+QNOn56KuoqT8PlrUcy9lASr1xiBxTpPwTxzJkyc
cRDuhUXDq0BLeDtnHjgu2w0fxJyg6Ka8kBo+Epxm7YOEwamwr30FWEcAeLUR
qFnOgOOP/AEzfMBdFsDhgiOMFo2AoQUxcEHTA+6HbYeu3DuQeKkDtDMvQ0+B
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
8Hl6NFjYQTebNJicrzPjrnsz/zwrJucmwv5+SKSD31bj0IZokHtfjTKepXQ+
TYmV33Zm4d6+bBTmsaU7BNhb25204Y8nTtTbCU0ZIhSn0EhKdqostM6OTXJ2
YUXfTFjx+P07fiSNslyuoPrUxSDcqYOre8thyfZoKDnGh89vtcLA8tuctUMN
8OcPwPWrh6GErxB2SfBi1h1JvJ19G3TkZoPEsCIEPrYBxeyN0HX9M1Sd8cFg
1dM42ihIw3k2VNabQru3NNDWxy/JmPtL3jl8bHDyD9oh30/Sga00aW4Dvf17
gUTE2una3B7y9u0mse+N1PY5kWK1JUn/RAZs/pGDogF38EpEOnoZjHBde67h
3BBzsvyyi1apHKBNRyvpiu15Um+9Rt6qHdQUfJM2762nZX8KSbY/ksqtbEkh
xJjKfjqSP28CDc89QzXlfXTe9hfdm8fPvkX9I697b0j48w169eAIhe3fQi8G
NCm16QyeedIK69eVQIm9BvqkSOLiRHdo510D5+/ch5M300DKdD9cP+SGsZ+y
cLvzZhwtaORkQ8tQytmcnBRTKPDkCVp/4AKd3tREygsukMyKejqfd5487tTR
daUqklXIpz/eYfQ3ZjZpdvHQj/73mD80mVoqt1LCr9OUX/CKMsbG59glytIk
BZhhyTBRayuVeBZT9cdttNzGkJTWP8TzjbpYNnQG1mWvxPuZ0ZgrNwfP3b0O
rCQce2VacZNVP5JUE74sXoUG6xD2T7kMb6+pobuuGB50zIElN1aAGSuBo57J
sCtdA6R+lkMYx4v1yRI4w/sbLJvQAbW25+C+dhaYaQrDiGEKt7loIzgl7oce
lR3g/UMDNGJmAX/cSijDlbBsyBLCXdUhpPEjN/WzKgjNTIOjF+ohY3MZhB3f
CZ9idlr8MlsLy7dcgNX6p6FxNQczPhvDA5/LMOQzDP2pVyHVyxQ87Bu54esR
MGCfDh8feoFg1zTgns2HNf0c7NgxFcoksuGK0zBcNpDE9gNC+DXvPgw7Z8ON
wWWwqWshWM0KhTv/kuGg/R64ujIfKm6KYgAfw0IxPfx+4wn30nwfGj4xpdOG
h6l9yyuaNVOa9VlOY7eaDNjiXkP2cKo+65yizayrNZhSqiabOKjDjN7rs45F
BuzJL312bIE2yxCezDznKrJkeUWm4TaZTfDQZW9Fjdjh3tksVmIGu+4gz0yd
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
70sSzGTC+KbcETeHBWNEpR8GO2thgEka7I46CLUt0/HWtKXo9BdRbNM9UDYw
hMP9o/DTXwmTnryHs0OTobXPHQ63XoMasypoTbvKhc+2gJZbFTA1Yy+k1Gdz
n4Qd4M+RPHiW4ACGhms403dH4MKjp6BqdAJOpe7nqp77wUuZKxCcWwamW/q5
G0OicFd8L3RlhMMWpYng9WEWFN01gY6V9mA95TH4RWmg99MZmPebF3c4pEMf
jwokrBlnS8uZ+HnRbowvX4qSjo5wZrooPeg7RG8W8zOJ4DmsIWcFU7DcwYKF
E9jzOXvZSfVU1jyWyuK7U9k6LoXd/p7I5LpimVRoFKvQ2sPuj0Wz3GsJLLg0
ha1t2cdMZVLY8PcYJnF0A1sr4MREZKYzt6m8zO/VMcqOVyT/lAuwu1WKfuto
kNdaV9wvx5Hina+U9MKSNdmsZw5N65mA/Xz2T0aYxSsdJt0GL/qakkFaib9o
ei2yec/WM/2Kzay11oFNPC/E8mziyfrUM0yPkiDD3mPEc0iFvenzZBPOh7J2
5xWMb60m8w45RZ1bK1G18BC6ruxDx0zCbTy2OO33M7y+aQDv/92BQkkPOCN1
P/QqiMIYKxEMWW4Czk8MMG0H4azPV4F7KgeJL/+AQ9FfcF8XASFyl8DnqRqa
fZbH7LIymKFgCf/j0L6jevzfP4BX2lNTZSSplIaiovc1IlqUUCghCVmpJKWi
vfcQkVlKESGyEp8ks1CyE5Lsldn49vv9fd/ndc59Xue6ns/HOfea+8ehw6sA
bix7Z61dsBt+X5fA84PuGHG9Ddo2JsPl6VtAVPwaGF4dg1/EPHHrklV4WZVx
GL2BfAk9+DfgJZAdFSsY9nQFjIlsgd+pQjj1aQd8rsiG7W+UYfqUrwIlRU94
MfUCjDn0Gerj2+B5qBckHcgULN2/C85va4Qlw47AwJcdsPlrE8wyFsHk2dI4
1F8azTTFsHD0UxiyLxe6IRcmH7sHYze/hsJFFyAppBDmniyHhLlV8E+iAhaF
tMA2AzGcelUIqw0PgdTlxYLlCwg+NuVDLMbAZo/pcMJ6LWx7thwCbM8IFkzX
AkFXDZg8/gge/m/hj+YdSFx2DkLiMkHI875gl542pHucgoUGLaDx+wBMEB8C
XqP3ClZvUIPX0U8Fmx6owBZIAaG8PdA0ZD0YLb8vKHCoE+Q21AmEzlwVOE1O
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
m0e8psq4+zxee55ZMw7T/lUlZ1w+xn8bjjKieTd7563moLf6tGgrgtWcVUib
PhEWW69gac/BPOg0l0lvurjoryrXjX2DMQY+DLy/iUvl8nj5zWYW6K9jm+1M
LtjlxjknzFiZ/Qdn3ZJQ0nFQKNv1Eg+Pj2T0piB2LBnN7z++QU9FEQV1hzF8
tDRz9n3F46e5WDzoh/Ct7oij2SEtRKRvx9HM/7Dxag0i56fCbpsR/mVPwRfd
Alyb34iHNka8qTKKPYJn8HW2H98YOLBjmCb9V16Bu70RGkdIYM/XSnQc+43H
fopcFfcbd7ftR1ivQcLV7YXYUGLGxdVjmBUH9nwuz6Gm0qyZasay133oOKQb
Zf56cW1DNqMvHuGDEXtZqjOL87wled1Pm1cGjqK61mKuKY9npu12jgtOp+Wu
ley4bk4//2KcPFkvzBm5GckZMizfbM6QlUYUhQeoPmqCpWPGY0i4Es8FbmQP
t4vM7dPGC7VS4rqyT4TsaSpsjuTq9z34dlY0mp7ux830ntTJGcpufVX4LdoO
WxUzMVZDn/dc+vPJbgWm9LsB5/NfcOqGKic5yLHGsAHrd+9BSYErbEoMhE8J
gOq8KFjIaiOrRAGfAl+h2+m+rMjqyYV7juJNXHeIfv/hwKjfmPCyEILXXozq
PpLr0tI5VbKMI3RKWP8pg//81rJsZAAHj55Jg7Eb6XpqM6ety+Cl7yk06ree
1kpLyaAN/BW1jY6b9nOd2SEWbi+iR3gC3zd3xeHEP/Q/oMCN022YouJBqfWu
VB7XjydbJXhGehf6xJhjXLAFpkcsRK1pBAxfR8Fn5ikM75BjlKIxazq1uPDE
TeyU6oWqi9OEF4Nl4D9lr6A30hI+Q4thMqsGGcEFqFzkhQ9nDiFiryrdtCw5
rMmU72q0OLy7HNO6K/LHYn2OmGrO0vO6TO53GoOOhQpqQgP8u/p+geksOt8Z
w5TBSbh+LAAth9SY+0/k8i125P5OfDQIg0VUNjZHKLJ1gg0tljmyW5IVe6t0
Y1trDSaHe2JjnSpqVj7CDh07ZgfMYaFUKLNzAtn4y5tJR93YMWQkn3Wz5v4v
HQgwu4HQNar09RJoS5EFuVp82+ccas4/wsDzpjznOIkLK+NIvVIW+dZz9cF/
1JVUE7et1xftvfqKLV4DxAnF9uJmLVE8MQzixSxbUWlqH7F+RndRb5q6+F5a
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
wfVjk/A/ldqyXw==
    "], {{0, 256}, {256, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{256, 256},
  PlotRange->{{0, 256}, {0, 256}}]], "Output",
 CellChangeTimes->{3.7681297343303103`*^9, 3.7681322249527655`*^9},
 CellLabel->"Out[5]=",
 CellID->525332395,ExpressionUUID->"1fa25c1d-8884-4870-aa4c-d9338fb9a350"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 CellLabel->"In[6]:=",
 CellID->754506620,ExpressionUUID->"45389b47-4730-4c5d-bbf9-8333cd7484d4"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["ResourceFunction", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction"],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<InverseFourierShift\>\"", 
   "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b992c743-911a-4822-98c6-43c42faa623c"],
 " is the inverse of ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["ResourceFunction", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction"],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<FourierShift\>\"", "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6ef2d4a1-a584-41ad-b3b5-6814694aab7d"],
 ":"
}], "Text",
 CellChangeTimes->{{3.768125093278857*^9, 3.7681250945759315`*^9}, {
  3.768130587102086*^9, 3.76813058822215*^9}},
 CellID->8192474,ExpressionUUID->"e4ad21dc-724c-4e9c-b896-c6f9a877f024"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "@", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<FourierShift\>\"", "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7681251045885043`*^9, 3.768125149119051*^9}, 
   3.768131208585633*^9},
 CellLabel->"In[1]:=",
 CellID->65915853,ExpressionUUID->"3f072b78-563c-4433-ab74-5e0ff725a8f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768127597629098*^9, 3.768131258419483*^9, 
  3.7681322251757784`*^9},
 CellLabel->"Out[1]=",
 CellID->376275767,ExpressionUUID->"373405d4-69e1-48b5-9dfc-caf31c20d426"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellLabel->"In[2]:=",
 CellID->92483860,ExpressionUUID->"8866314a-b5c8-44c3-a035-a77d48db69fc"],

Cell["Only support full arrays:", "Text",
 CellChangeTimes->{{3.768112239304652*^9, 3.7681122424158297`*^9}, {
  3.7681177676188536`*^9, 3.7681177721451125`*^9}, {3.7681178087682076`*^9, 
  3.768117828653344*^9}},
 CellID->224241196,ExpressionUUID->"38f5cc9c-4a76-47ba-8d15-e3b3488f7bd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "2", "}"}], ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.768118933046512*^9, 3.7681189402209225`*^9}, {
  3.7681241647517486`*^9, 3.768124166429845*^9}},
 CellLabel->"In[1]:=",
 CellID->112796673,ExpressionUUID->"a5e60c77-5a0a-4bcc-9e5c-3d4af9b8f62d"],

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "2", "}"}], ",", "3"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.7681208968918376`*^9, 3.768127600251248*^9, 
  3.7681322254277925`*^9},
 CellLabel->"Out[1]=",
 CellID->69200625,ExpressionUUID->"b3e90059-de4f-4507-8000-638e557b59c9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Deletable->False,
 CellTags->"Source & Additional Information",
 CellID->318391102,ExpressionUUID->"be19aff6-4f6d-45fc-8252-821d42d65fb0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
       Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "498709a7-3670-4c28-bad8-4b3c1ac8be9b"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Contributed By",
 CellID->127820888,ExpressionUUID->"7c54f323-6e08-41fb-984d-dbb002bd5742"],

Cell["Yong-an Lu", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.768121992496503*^9, {3.779235121569076*^9, 3.779235124989485*^9}},
 CellTags->"TabNext",
 CellID->832483124,ExpressionUUID->"1c536ba8-b88b-472b-8936-ea803ccb6b40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "75bc8fc5-69ca-4523-9e43-63891d6ea9a9"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Keywords",
 CellID->547400482,ExpressionUUID->"f91782ed-1819-433e-a9fb-cbe478b8399c"],

Cell[CellGroupData[{

Cell["Fourier transform", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.7681219965667353`*^9, {3.779591893014199*^9, 3.779591913745164*^9}},
 CellTags->"TabNext",
 CellID->123227828,ExpressionUUID->"0dc171a5-4916-4c5e-84c2-66523f741073"],

Cell["rearrange", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.7681219965667353`*^9, {3.779591900247045*^9, 3.7795919012929864`*^9}},
 CellID->145758811,ExpressionUUID->"527b7887-d7ea-4e5c-a7f9-99a0e9ca7a5e"],

Cell["optics", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.7681219965667353`*^9, {3.779591900247045*^9, 3.77959190692607*^9}},
 CellID->16196475,ExpressionUUID->"1718087e-30eb-4156-9bcc-539cd2bea7e4"],

Cell["data processing", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.7681219965667353`*^9, {3.779591900247045*^9, 3.7795919105889564`*^9}},
 CellID->286938834,ExpressionUUID->"55e2086c-1bca-4e0b-a73d-8f0685392104"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Categories",
 CellID->749076926,ExpressionUUID->"85a1c081-44d5-429b-84e7-76093e87bc34"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Cloud & Deployment"}],"\" \"",
       "\"Cloud & Deployment\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Core Language & Structure"}],"\" \"",
       "\"Core Language & Structure\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[
       "Data Manipulation & Analysis", {
        False, "Data Manipulation & Analysis"}],"\" \"",
       "\"Data Manipulation & Analysis\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[
       "Engineering Data & Computation", {
        False, "Engineering Data & Computation"}],"\" \"",
       "\"Engineering Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "External Interfaces & Connections"}],
       "\" \"","\"External Interfaces & Connections\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Financial Data & Computation"}],"\" \"",
       "\"Financial Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Geographic Data & Computation"}],"\" \"",
       "\"Geographic Data & Computation\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Geometry"}],"\" \"","\"Geometry\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Graphs & Networks"}],"\" \"",
       "\"Graphs & Networks\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Higher Mathematical Computation"}],"\" \"",
       "\"Higher Mathematical Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{CheckboxBox[False, {False, "Images"}],"\" \"","\"Images\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Just For Fun"}],"\" \"","\"Just For Fun\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[
       False, {False, "Knowledge Representation & Natural Language"}],"\" \"",
       "\"Knowledge Representation & Natural Language\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Machine Learning"}],"\" \"",
       "\"Machine Learning\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Notebook Documents & Presentation"}],
       "\" \"","\"Notebook Documents & Presentation\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Programming Utilities"}],"\" \"",
       "\"Programming Utilities\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Repository Tools"}],"\" \"",
       "\"Repository Tools\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[
       False, {False, "Scientific and Medical Data & Computation"}],"\" \"",
       "\"Scientific and Medical Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
       "\" \"","\"Social, Cultural & Linguistic Data\""},
      "RowDefault"], 
     TemplateBox[{CheckboxBox[False, {False, "Sound"}],"\" \"","\"Sound\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Strings & Text"}],"\" \"",
       "\"Strings & Text\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Symbolic & Numeric Computation"}],"\" \"",
       "\"Symbolic & Numeric Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "System Operation & Setup"}],"\" \"",
       "\"System Operation & Setup\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Time-Related Computation"}],"\" \"",
       "\"Time-Related Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "User Interface Construction"}],"\" \"",
       "\"User Interface Construction\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Visualization & Graphics"}],"\" \"",
       "\"Visualization & Graphics\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   ColumnsEqual->True,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{},
   RowsEqual->True],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellTags->"CategoriesCell",
 CellID->496584932,ExpressionUUID->"efb92c5b-fb14-4aa9-b75a-5ba9c175a585"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "cbbd03ad-fd87-42e8-afd4-97b94228d576"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Symbols",
 CellID->161079978,ExpressionUUID->"18df5efd-0928-469f-9c1d-467ad9344e0c"],

Cell[CellGroupData[{

Cell["InverseFourier", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681220122016296`*^9, 3.768122021158142*^9}, {
  3.7683919349193263`*^9, 3.7683919349263268`*^9}},
 CellID->105835556,ExpressionUUID->"5474beb0-631b-4ec7-b5a8-3043778ac625"],

Cell["RotateRight", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7681220122016296`*^9, 3.768122021158142*^9}, {
  3.768391935173341*^9, 3.768391939604594*^9}},
 CellID->260595841,ExpressionUUID->"48b142c8-b09e-4dac-a8ce-311014d5da5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "295aaf24-6947-474e-9bb7-1ba082d1b34c"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Resource Objects",
 CellID->588449267,ExpressionUUID->"47f538e0-31bc-4766-995c-b3eb9dc91116"],

Cell["FourierShift", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.768122037360069*^9},
 CellTags->"TabNext",
 CellID->960273585,ExpressionUUID->"cf3f59de-f104-434e-93aa-b9fe30134c7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b0353b82-5683-4733-bde8-34b4ebddd0d5"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Source/Reference Citation",
 CellID->642091068,ExpressionUUID->"2e6805a4-bb1b-4958-815b-eccd870d8c4d"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->343081869,ExpressionUUID->"a0c3fcc3-3e1c-48af-ada3-0c25044dc999"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "366e61f2-95ef-4f06-89e8-2bc55b88294e"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Links",
 CellID->521525586,ExpressionUUID->"264ee1a3-26a5-46ab-b433-1398700e267f"],

Cell[TextData[ButtonBox["MATLAB ifftshift",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.mathworks.com/help/matlab/ref/ifftshift.html"], None},
 ButtonNote->
  "https://www.mathworks.com/help/matlab/ref/ifftshift.html"]], "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.768122043404414*^9, 3.7681220489617324`*^9}, {
  3.768122096697463*^9, 3.768122096700463*^9}},
 CellTags->"TabNext",
 CellID->485448166,ExpressionUUID->"217543c1-569b-45db-a097-63225d2448a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Specify an optional list of tests for verifying that the function is \
working properly in any environment. Tests can be specified as Input/Output \
cell pairs or as symbolic VerificationTest expressions for including \
additional options.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "be80aa68-5d46-4786-a0ab-4df0b0fd967f"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Tests",
 CellID->74308299,ExpressionUUID->"d5c7129c-a551-4795-b989-5fdce110e980"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.768127632366085*^9, 3.7681276352822514`*^9}},
 CellLabel->"In[1]:=",
 CellID->667877521,ExpressionUUID->"4d9f354b-a0ca-41bc-b602-6fce12ffcda8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "1", ",", "2", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768127645196819*^9, 3.768132225990825*^9},
 CellLabel->"Out[1]=",
 CellID->165067661,ExpressionUUID->"ae1f37f6-55ce-4ea4-819a-de4a7d72cfc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768127642334655*^9, 3.768127643244707*^9}},
 CellLabel->"In[2]:=",
 CellID->88538113,ExpressionUUID->"b97c060c-03db-41e5-bad3-0b17c1640fd8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768127647058925*^9, 3.7681322260518284`*^9},
 CellLabel->"Out[2]=",
 CellID->398099110,ExpressionUUID->"bf374b95-0709-4f74-8a6e-1c566a9d3eba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]}], "}"}], ",", 
   "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.768127653000265*^9, 3.7681276541063285`*^9}},
 CellLabel->"In[3]:=",
 CellID->8456648,ExpressionUUID->"7f5e7d94-549e-4416-a88b-ed22d17b6aae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768127654790367*^9, 3.7681322261168327`*^9},
 CellLabel->"Out[3]=",
 CellID->136214636,ExpressionUUID->"45d260af-3996-4faf-b4c2-b4a8587ee2ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierShift", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "12"}], "}"}]}], "}"}]}], "}"}], ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "16"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "18"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"19", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"21", ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"23", ",", "24"}], "}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], ";;"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7681276631878476`*^9, 3.7681276641129007`*^9}},
 CellLabel->"In[4]:=",
 CellID->273795476,ExpressionUUID->"4fa47335-9d13-45c4-a2bd-7d31eae23654"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "7"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"18", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "13"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"22", ",", "21"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"24", ",", "23"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "19"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768127664922947*^9, 3.768132226183836*^9},
 CellLabel->"Out[4]=",
 CellID->6435009,ExpressionUUID->"623bf120-3d01-4740-af25-18c8777c314b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author Notes", "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Author Notes",
 CellID->795110225,ExpressionUUID->"053e60aa-55c6-4c1f-ac22-f7c285c8860d"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->567921317,ExpressionUUID->"fdd5d944-6acf-43ef-8c25-3733a8a891d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "cc36a97f-249b-48f6-a14d-b5aaa5372042"]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Submission Notes",
 CellID->843283583,ExpressionUUID->"3bbaa72f-506d-4112-ade3-9a6345ed060f"],

Cell["A replica of ifftshift in MATLAB.", "Text",
 CellChangeTimes->{3.7683920735472555`*^9},
 CellID->777619296,ExpressionUUID->"82be309c-739e-46f3-ab9b-c2df161d3e09"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unused Cells", "Section",
 CellGroupingRules->{TitleGrouping, -10000},
 FontColor->GrayLevel[0.65],
 CellTags->"Unused Cells",
 CellID->300658071,ExpressionUUID->"25875bc0-b7fe-4728-b28c-41b1f3cc6dca"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Cloud & Deployment"}],"\" \"",
       "\"Cloud & Deployment\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Core Language & Structure"}],"\" \"",
       "\"Core Language & Structure\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[
       "Data Manipulation & Analysis", {
        False, "Data Manipulation & Analysis"}],"\" \"",
       "\"Data Manipulation & Analysis\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[
       "Engineering Data & Computation", {
        False, "Engineering Data & Computation"}],"\" \"",
       "\"Engineering Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "External Interfaces & Connections"}],
       "\" \"","\"External Interfaces & Connections\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Financial Data & Computation"}],"\" \"",
       "\"Financial Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Geographic Data & Computation"}],"\" \"",
       "\"Geographic Data & Computation\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Geometry"}],"\" \"","\"Geometry\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Graphs & Networks"}],"\" \"",
       "\"Graphs & Networks\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Higher Mathematical Computation"}],"\" \"",
       "\"Higher Mathematical Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{CheckboxBox[False, {False, "Images"}],"\" \"","\"Images\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Just For Fun"}],"\" \"","\"Just For Fun\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[
       False, {False, "Knowledge Representation & Natural Language"}],"\" \"",
       "\"Knowledge Representation & Natural Language\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Machine Learning"}],"\" \"",
       "\"Machine Learning\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Notebook Documents & Presentation"}],
       "\" \"","\"Notebook Documents & Presentation\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Programming Utilities"}],"\" \"",
       "\"Programming Utilities\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Repository Tools"}],"\" \"",
       "\"Repository Tools\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[
       False, {False, "Scientific and Medical Data & Computation"}],"\" \"",
       "\"Scientific and Medical Data & Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
       "\" \"","\"Social, Cultural & Linguistic Data\""},
      "RowDefault"], 
     TemplateBox[{CheckboxBox[False, {False, "Sound"}],"\" \"","\"Sound\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "Strings & Text"}],"\" \"",
       "\"Strings & Text\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Symbolic & Numeric Computation"}],"\" \"",
       "\"Symbolic & Numeric Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "System Operation & Setup"}],"\" \"",
       "\"System Operation & Setup\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Time-Related Computation"}],"\" \"",
       "\"Time-Related Computation\""},
      "RowDefault"]},
    {
     TemplateBox[{
      CheckboxBox[False, {False, "User Interface Construction"}],"\" \"",
       "\"User Interface Construction\""},
      "RowDefault"], 
     TemplateBox[{
      CheckboxBox[False, {False, "Visualization & Graphics"}],"\" \"",
       "\"Visualization & Graphics\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   ColumnsEqual->True,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{},
   RowsEqual->True],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellChangeTimes->{{3.768391775163189*^9, 3.7683917762832527`*^9}},
 CellID->743873981,ExpressionUUID->"84e6ae12-764b-4b44-997f-020bfa33ee79"]
}, Closed]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, 
   CellTags -> {"MainDockedCell"}], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   Background -> RGBColor[0.996078, 0.941176, 0.921569], 
   CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CellFrameColor -> GrayLevel[0.75], CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, False]]]},
TaggingRules->{
 "ResourceCreateNotebook" -> True, "ResourceType" -> "Function", 
  "TemplateVersion" -> "1.2.22", "ToolsOpen" -> False, "StatusMessage" -> "", 
  "SubmissionReviewData" -> {"Review" -> False}, "AttachedHints" -> {}},
CreateCellID->True,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (2019\:5e744\:67088\
\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, 
       CellTags -> {"MainDockedCell"}], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       Background -> RGBColor[0.996078, 0.941176, 0.921569], 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CellFrameColor -> GrayLevel[0.75], CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, False]]]}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "], CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.627441, 0.627441, 0.627441, 1.], StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMPjwkBdpVlKDtNeMcWlaUg5bLCT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+V+XP9TIsKXP8jkPnPVODmg9UbqsLt
97yxfXJHjSrcfWD3LFJ1gLkfxn9jH7F5d64snA9Wby4H139K1mzizNtyqObX
y8PtN2iZ8/3/RXm4+2B8mPthfJj/YPph/oeZDwsfmP2w8IO5Dxa+6OEPAGHh
sd4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOB35VvNh9m88Bxo+YItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfL0f78Zk/gnC+
jhfnwVVSwnC+lOWP9TMtReD8F6xHa9LMROH8SRvy1QUFxdD4EnA+l8bzeR0a
knD+koMNFkpCUnB+Qq3Nl7tnEXwZkH2d0qjyvjJo7pOF8CXFHX6IXestL0fw
jz1eFOXyR84hZft5LeO7cg4b7OR+vTulAJFPlHeo4X59bPd0BB+iXxrOR/EP
kI/iXyC/aX6cGIOFCJwPdp+oMJwPDt/PgnA+2D1PBOB8WHygxy8Abafrpg==

                "]}]}, 
             FaceForm[
              RGBColor[0.627441, 0.627441, 0.627441, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "], CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.5, 0.5, 0.5, 1.], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "]]}, 
             FaceForm[
              RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMPjwkBdpVlKDtNeMcWlaUg5bLCT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+V+XP9TIsKXP8jkPnPVODmg9UbqsLt
97yxfXJHjSrcfWD3LFJ1gLkfxn9jH7F5d64snA9Wby4H139K1mzizNtyqObX
y8PtN2iZ8/3/RXm4+2B8mPthfJj/YPph/oeZDwsfmP2w8IO5Dxa+6OEPAGHh
sd4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOB35VvNh9m88Bxo+YItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfL0f78Zk/gnC+
jhfnwVVSwnC+lOWP9TMtReD8F6xHa9LMROH8SRvy1QUFxdD4EnA+l8bzeR0a
knD+koMNFkpCUnB+Qq3Nl7tnEXwZkH2d0qjyvjJo7pOF8CXFHX6IXestL0fw
jz1eFOXyR84hZft5LeO7cg4b7OR+vTulAJFPlHeo4X59bPd0BB+iXxrOR/EP
kI/iXyC/aX6cGIOFCJwPdp+oMJwPDt/PgnA+2D1PBOB8WHygxy8Abafrpg==

                "]}]}, 
             FaceForm[
              RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (If[
            MatchQ[
             CurrentValue[
              ButtonNotebook[], {TaggingRules, "AttachedCells", #}], 
             Blank[CellObject]], NotebookDelete[
              CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}]]; 
            CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             Inherited, CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]; 
            Null]; Null), Appearance -> None, Evaluator -> Automatic, Method -> 
         "Preemptive"], BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = 
            0., FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ > FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm], Evaluator -> "System"], 
                 ButtonFunction :> (
                  FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[#2]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          FunctionResourceTools`BuildDefinitionNotebook`Private`$$tooltip, 
           "Text", FontColor -> RGBColor[0.537255, 0.537255, 0.537255], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`FunctionTemplateToggle[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
            "Queued", ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection as literal Wolfram Language code\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               
               FunctionResource`DocuToolsTemplate`\
FunctionTemplateLiteralInput[]]), FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
            "Queued", ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Delimiter\"", "Text", FontFamily -> "Source Sans Pro",
                FontSize -> 11, StripOnInput -> False], 
              "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`DocDelimiter[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
            "Queued", ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Subscripted Variable\"", "Text", FontFamily -> 
               "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
              "\"Insert subscripted variable placeholder\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`InsertSubscript[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
            "Queued", ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Tables\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 
                11, StripOnInput -> False], "\"Table Functions\""}, 
              "PrettyTooltipTemplate"], 
             ButtonFunction :> (
              Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                Symbol["System`ResourceFunction"]]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[Null]),
              FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
                FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
               Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
             "Queued", ImageSize -> {All, 20}, Evaluator -> Automatic], {
            "\"Insert table with two columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[2]]", InputForm], 
             "\"Insert table with three columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[3]]", InputForm], 
             "\"Add a row to the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
System`FrontEndExecute[{System`FrontEndToken[System`ButtonNotebook[], \
\"NewRow\"]}]]", InputForm], "\"Sort the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableSort[]]", InputForm], 
             "\"Merge selected tables\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableMerge[]]", InputForm]}, Appearance -> 
            None, Method -> "Queued"], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              Button[
               RawBoxes[
                TemplateBox[{
                  StyleBox[
                  "\"Insert Comment\"", "Text", FontFamily -> 
                   "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                  "\"Insert comment for reviewer\""}, 
                 "PrettyTooltipTemplate"]], 
               Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                 Symbol["System`ResourceFunction"]]; Identity[
                 FunctionResource`DocuToolsTemplate`InsertComment[]], 
               FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1, 1, 1]}, {
                  FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
                 Evaluator -> "System"], 
               Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                   "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                 "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                   "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                 "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                   "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
               Background -> RGBColor[0.996078, 0.941176, 0.921569], Method -> 
               "Queued", ImageSize -> {All, 20}], ""], StandardForm], 
            Evaluator -> "System", SingleEvaluation -> True], 
           ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 Thickness[0.022222222222222223`], {
                  FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                   0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                   0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {
                   34.926, 45.}, {45., 34.926}, {45., 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], Background -> 
                 RGBColor[0.988235, 0.419608, 0.203922], AspectRatio -> 
                 Automatic, ImageSize -> {45., 45.}, 
                 PlotRange -> {{0., 45.}, {0., 45.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> 
                    "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                    StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, 
                  GridBoxDividers -> {
                   "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", 
           ItemBox[
            TemplateBox[{
              StyleBox[
              "\"Function Repository \[RightGuillemet]  \"", "Text", 
               FontColor -> GrayLevel[1], StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository/"}, 
             "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             
             TemplateBox[{
              "\"Open Sample\"", 
               "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`viewExampleNotebook[]\
& , "\"View a completed sample definition notebook\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Style Guidelines\"", 
               "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`viewStyleGuidelines[]\
& , "\"View general guidelines for authoring resource functions\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`getResource[
              ButtonNotebook[], "Tools"]& , 
             "\"Toggle documentation toolbar\"", False}, 
            "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`checkNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             True}, "OrangeButtonTemplate"], 
           ActionMenuBox[
            TemplateBox[{
             "\"Preview \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"In a notebook\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Preview\"]]", InputForm], "\"On the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Deploy \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"Locally on this computer\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Local\"]]", InputForm], "\"For my cloud account\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm], "\"Publicly in the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"CloudPublic\"]]", InputForm], 
             "\"In this session only (without documentation)\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"KernelSession\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", Initialization :> If[
                Not[$CloudEvaluation], CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                ""]], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit changes to update your resource submission\""}, 
                  "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`\
submitRepositoryUpdate[
                  ButtonNotebook[]]& , 
                 "\"Submit changes to update your resource submission\"", 
                 True}, "OrangeButtonTemplate"]], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit your function to the Wolfram Function Repository\
\""}, "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`submitRepository[
                  ButtonNotebook[]]& , 
                 "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.988235, 0.419608, 0.203922], 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.988235, 0.419608, 0.203922]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222222222222223`], {
                FaceForm[{
                  RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                 0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                 0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926,
                  45.}, {45., 34.926}, {45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                  "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                  27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                  26.308999999999997`}, {21.375, 26.258000000000003`}, {
                  21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                  15.602}, {21.426, 15.547}, {23.828, 15.315999999999999`}, {
                  23.828, 14.242}}, {{24.578, 18.75}, {24.578, 
                  23.078000000000003`}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078000000000003`}, {30.578, 18.75}, {
                  30.581999999999997`, 18.288999999999998`}, {30.207, 
                  17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                  17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                  14.242}, {31.328, 15.315999999999999`}, {33.684, 
                  15.539000000000001`}, {33.789, 15.602}, {33.789, 17.641}, {
                  33.789, 24.188}, {33.789, 26.227}, {33.684, 26.281}, {
                  31.328, 26.512000000000004`}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234000000000002`}}}]}}, {
              ImageSize -> 12, Background -> None, AspectRatio -> Automatic, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro SemiBold", 
         FontWeight -> "SemiBold", FontTracking -> -0.9, FontSize -> 13, 
         FontColor -> GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
        Block[{ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
           False}, Symbol["System`ResourceFunction"]; If[
            TrueQ[#4], CurrentValue[
               ButtonNotebook[], {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]; 
            FunctionResource`DefinitionNotebook`Private`showProgress, 
            Identity][
            #2[]]], FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPngeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPA8Wu
WjBdNmVARkARoDhCWZjUdUsWNDUQBBQHykJcC9RyxRzdKAgCigNlGcCAGGVE
mka824j1KdHhRkwsEBOnAMp0Eag=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotdGIa7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2ctQqQ1GnGhqIAgoDpSFuBarUcgGMoABMcqINI14txHp
U+LDjZhYICZOAZ5bBHA=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nr99I5gU7gaCAKKAMWBshDXArV8vnUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBDsjmM
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
        "Queued", ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], #, 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 0}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.921569, 0.341176, 0.105882]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.614379, 0.227451, 0.0705882]], 
   Cell[
    StyleData["InlineFormula"], FontSize -> 0.99 Inherited], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False]}, Visible -> 
  False, FrontEndVersion -> 
  "12.0 for Microsoft Windows (64-bit) (2019\:5e744\:67088\:65e5)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 607, 9, 96, "Title",ExpressionUUID->"7713ef73-3a24-46dd-bb34-9c9c3466e8d6",
   CellTags->{"Title", "TabNext"},
   CellID->362346026]},
 "TabNext"->{
  Cell[580, 22, 607, 9, 96, "Title",ExpressionUUID->"7713ef73-3a24-46dd-bb34-9c9c3466e8d6",
   CellTags->{"Title", "TabNext"},
   CellID->362346026],
  Cell[1190, 33, 597, 9, 34, "Text",ExpressionUUID->"59fa9636-6bc3-40a5-9464-5b0af03ea0d2",
   CellTags->{"Description", "TabNext"},
   CellID->450900334],
  Cell[2815, 70, 1848, 44, 195, "Code",ExpressionUUID->"ded2ad6a-9b04-44ca-9148-4d93ce3531af",
   CellTags->"TabNext",
   CellID->778396829],
  Cell[6632, 173, 265, 5, 26, "UsageInputs",ExpressionUUID->"14246f43-db73-4aff-a25b-1e64eac924c6",
   CellTags->"TabNext",
   CellID->410373307],
  Cell[6900, 180, 663, 14, 26, "UsageDescription",ExpressionUUID->"89526ee7-d991-47ea-b84f-9d628c9dabc5",
   CellTags->"TabNext",
   CellID->584004037],
  Cell[9722, 256, 2105, 52, 31, "Notes",ExpressionUUID->"e329d6b2-e942-41fe-bcb5-113092b336e2",
   CellTags->"TabNext",
   CellID->521904482],
  Cell[402123, 7233, 611, 10, 34, "Text",ExpressionUUID->"1c536ba8-b88b-472b-8936-ea803ccb6b40",
   CellTags->"TabNext",
   CellID->832483124],
  Cell[403593, 7271, 620, 10, 31, "Item",ExpressionUUID->"0dc171a5-4916-4c5e-84c2-66523f741073",
   CellTags->"TabNext",
   CellID->123227828],
  Cell[413623, 7531, 564, 9, 31, "Item",ExpressionUUID->"cf3f59de-f104-434e-93aa-b9fe30134c7c",
   CellTags->"TabNext",
   CellID->960273585],
  Cell[415102, 7567, 551, 8, 34, "Text",ExpressionUUID->"a0c3fcc3-3e1c-48af-ada3-0c25044dc999",
   CellTags->"TabNext",
   CellID->343081869],
  Cell[416420, 7601, 855, 15, 31, "Item",ExpressionUUID->"217543c1-569b-45db-a097-63225d2448a4",
   CellTags->"TabNext",
   CellID->485448166],
  Cell[423949, 7830, 564, 8, 34, "Text",ExpressionUUID->"fdd5d944-6acf-43ef-8c25-3733a8a891d9",
   CellTags->"TabNext",
   CellID->567921317]},
 "Description"->{
  Cell[1190, 33, 597, 9, 34, "Text",ExpressionUUID->"59fa9636-6bc3-40a5-9464-5b0af03ea0d2",
   CellTags->{"Description", "TabNext"},
   CellID->450900334]},
 "Definition"->{
  Cell[1812, 46, 1000, 22, 67, "Section",ExpressionUUID->"652dac34-a0e1-4924-89d2-42520c773430",
   CellTags->"Definition",
   CellID->474513213]},
 "Documentation"->{
  Cell[4700, 119, 154, 3, 67, "Section",ExpressionUUID->"287bcf5e-3319-4c12-bdb8-97836e1b19f6",
   CellTags->"Documentation",
   CellID->855965831]},
 "Usage"->{
  Cell[4879, 126, 1728, 43, 53, "Subsection",ExpressionUUID->"8353bba2-b1ff-4da1-a340-5d164627231a",
   CellTags->"Usage",
   CellID->310800389]},
 "Details & Options"->{
  Cell[8453, 227, 1244, 25, 53, "Subsection",ExpressionUUID->"1feab1a9-f803-4813-9111-6ecfad4269f8",
   CellTags->"Details & Options",
   CellID->66019318]},
 "Examples"->{
  Cell[14543, 368, 6513, 144, 67, "Section",ExpressionUUID->"e3866e68-5dfe-4fd4-9ebc-259ee014e3f0",
   CellTags->"Examples",
   CellID->180595041]},
 "Source & Additional Information"->{
  Cell[401109, 7205, 190, 3, 67, "Section",ExpressionUUID->"be19aff6-4f6d-45fc-8252-821d42d65fb0",
   CellTags->"Source & Additional Information",
   CellID->318391102]},
 "Contributed By"->{
  Cell[401324, 7212, 796, 19, 53, "Subsection",ExpressionUUID->"7c54f323-6e08-41fb-984d-dbb002bd5742",
   CellTags->"Contributed By",
   CellID->127820888]},
 "Keywords"->{
  Cell[402771, 7248, 797, 19, 53, "Subsection",ExpressionUUID->"f91782ed-1819-433e-a9fb-cbe478b8399c",
   CellTags->"Keywords",
   CellID->547400482]},
 "Categories"->{
  Cell[406046, 7320, 181, 4, 53, "Subsection",ExpressionUUID->"85a1c081-44d5-429b-84e7-76093e87bc34",
   CellTags->"Categories",
   CellID->749076926]},
 "CategoriesCell"->{
  Cell[406230, 7326, 4439, 130, 274, "Output",ExpressionUUID->"efb92c5b-fb14-4aa9-b75a-5ba9c175a585",
   CellTags->"CategoriesCell",
   CellID->496584932]},
 "Related Symbols"->{
  Cell[410706, 7461, 774, 19, 53, "Subsection",ExpressionUUID->"18df5efd-0928-469f-9c1d-467ad9344e0c",
   CellTags->"Related Symbols",
   CellID->161079978]},
 "Related Resource Objects"->{
  Cell[412796, 7510, 824, 19, 53, "Subsection",ExpressionUUID->"47f538e0-31bc-4766-995c-b3eb9dc91116",
   CellTags->"Related Resource Objects",
   CellID->588449267]},
 "Source/Reference Citation"->{
  Cell[414224, 7545, 875, 20, 53, "Subsection",ExpressionUUID->"2e6805a4-bb1b-4958-815b-eccd870d8c4d",
   CellTags->"Source/Reference Citation",
   CellID->642091068]},
 "Links"->{
  Cell[415690, 7580, 727, 19, 53, "Subsection",ExpressionUUID->"264ee1a3-26a5-46ab-b433-1398700e267f",
   CellTags->"Links",
   CellID->521525586]},
 "Tests"->{
  Cell[417312, 7621, 880, 21, 53, "Subsection",ExpressionUUID->"d5c7129c-a551-4795-b989-5fdce110e980",
   CellTags->"Tests",
   CellID->74308299]},
 "Author Notes"->{
  Cell[423764, 7824, 182, 4, 67, "Section",ExpressionUUID->"053e60aa-55c6-4c1f-ac22-f7c285c8860d",
   CellTags->"Author Notes",
   CellID->795110225]},
 "Submission Notes"->{
  Cell[424550, 7843, 833, 20, 67, "Section",ExpressionUUID->"3bbaa72f-506d-4112-ade3-9a6345ed060f",
   CellTags->"Submission Notes",
   CellID->843283583]},
 "Unused Cells"->{
  Cell[425603, 7873, 207, 4, 67, "Section",ExpressionUUID->"25875bc0-b7fe-4728-b28c-41b1f3cc6dca",
   CellGroupingRules->{TitleGrouping, -10000},
   CellTags->"Unused Cells",
   CellID->300658071]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 501779, 9372},
 {"TabNext", 501944, 9376},
 {"Description", 503715, 9413},
 {"Definition", 503889, 9417},
 {"Documentation", 504057, 9421},
 {"Usage", 504219, 9425},
 {"Details & Options", 504390, 9429},
 {"Examples", 504563, 9433},
 {"Source & Additional Information", 504750, 9437},
 {"Contributed By", 504942, 9441},
 {"Keywords", 505115, 9445},
 {"Categories", 505284, 9449},
 {"CategoriesCell", 505458, 9453},
 {"Related Symbols", 505637, 9457},
 {"Related Resource Objects", 505827, 9461},
 {"Source/Reference Citation", 506027, 9465},
 {"Links", 506208, 9469},
 {"Tests", 506369, 9473},
 {"Author Notes", 506536, 9477},
 {"Submission Notes", 506711, 9481},
 {"Unused Cells", 506887, 9485}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 607, 9, 96, "Title",ExpressionUUID->"7713ef73-3a24-46dd-bb34-9c9c3466e8d6",
 CellTags->{"Title", "TabNext"},
 CellID->362346026],
Cell[1190, 33, 597, 9, 34, "Text",ExpressionUUID->"59fa9636-6bc3-40a5-9464-5b0af03ea0d2",
 CellTags->{"Description", "TabNext"},
 CellID->450900334],
Cell[CellGroupData[{
Cell[1812, 46, 1000, 22, 67, "Section",ExpressionUUID->"652dac34-a0e1-4924-89d2-42520c773430",
 CellTags->"Definition",
 CellID->474513213],
Cell[2815, 70, 1848, 44, 195, "Code",ExpressionUUID->"ded2ad6a-9b04-44ca-9148-4d93ce3531af",
 CellTags->"TabNext",
 CellID->778396829]
}, Open  ]],
Cell[CellGroupData[{
Cell[4700, 119, 154, 3, 67, "Section",ExpressionUUID->"287bcf5e-3319-4c12-bdb8-97836e1b19f6",
 CellTags->"Documentation",
 CellID->855965831],
Cell[CellGroupData[{
Cell[4879, 126, 1728, 43, 53, "Subsection",ExpressionUUID->"8353bba2-b1ff-4da1-a340-5d164627231a",
 CellTags->"Usage",
 CellID->310800389],
Cell[CellGroupData[{
Cell[6632, 173, 265, 5, 26, "UsageInputs",ExpressionUUID->"14246f43-db73-4aff-a25b-1e64eac924c6",
 CellTags->"TabNext",
 CellID->410373307],
Cell[6900, 180, 663, 14, 26, "UsageDescription",ExpressionUUID->"89526ee7-d991-47ea-b84f-9d628c9dabc5",
 CellTags->"TabNext",
 CellID->584004037]
}, Open  ]],
Cell[CellGroupData[{
Cell[7600, 199, 295, 6, 26, "UsageInputs",ExpressionUUID->"d72eaf70-ffae-4ee6-9283-307f3870febd",
 CellID->75175646],
Cell[7898, 207, 506, 14, 26, "UsageDescription",ExpressionUUID->"8f74a83f-774c-4412-a980-0541e1c27539",
 CellID->768162341]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8453, 227, 1244, 25, 53, "Subsection",ExpressionUUID->"1feab1a9-f803-4813-9111-6ecfad4269f8",
 CellTags->"Details & Options",
 CellID->66019318],
Cell[CellGroupData[{
Cell[9722, 256, 2105, 52, 31, "Notes",ExpressionUUID->"e329d6b2-e942-41fe-bcb5-113092b336e2",
 CellTags->"TabNext",
 CellID->521904482],
Cell[11830, 310, 922, 15, 31, "Notes",ExpressionUUID->"96e7da0e-387f-4201-a84d-90c5102ed80c",
 CellID->502755435],
Cell[12755, 327, 848, 16, 31, "Notes",ExpressionUUID->"49a0b527-b9b3-478c-9bab-049981e02f73",
 CellID->678908167],
Cell[13606, 345, 876, 16, 31, "Notes",ExpressionUUID->"d92beb8f-1f49-4094-847d-ff74869b79db",
 CellID->628857989]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14543, 368, 6513, 144, 67, "Section",ExpressionUUID->"e3866e68-5dfe-4fd4-9ebc-259ee014e3f0",
 CellTags->"Examples",
 CellID->180595041],
Cell[CellGroupData[{
Cell[21081, 516, 134, 2, 53, "Subsection",ExpressionUUID->"dd64a368-d6bc-44ae-ba08-3da9b43facb2",
 CellID->462042388],
Cell[21218, 520, 177, 2, 34, "Text",ExpressionUUID->"07891191-ec70-4de2-b073-06aeb8fc98cf",
 CellID->13078159],
Cell[CellGroupData[{
Cell[21420, 526, 357, 8, 28, "Input",ExpressionUUID->"564810d6-6a51-43b9-8cb6-e43220593cc0",
 CellID->443871870],
Cell[21780, 536, 280, 6, 32, "Output",ExpressionUUID->"685ba3f9-4656-4d29-a8c7-4992caba2bc8",
 CellID->478041838]
}, Open  ]],
Cell[22075, 545, 314, 6, 34, "Text",ExpressionUUID->"603a372a-7eed-49b4-be6b-6e121fd9e43a",
 CellID->134280562],
Cell[CellGroupData[{
Cell[22414, 555, 336, 7, 28, "Input",ExpressionUUID->"6b56da24-7ae3-4c57-a568-ef44ee77b911",
 CellID->98303434],
Cell[22753, 564, 290, 6, 32, "Output",ExpressionUUID->"8989ac91-ae58-4268-8ac1-d7d20e7b3c3d",
 CellID->329562357]
}, Open  ]],
Cell[CellGroupData[{
Cell[23080, 575, 242, 5, 31, "ExampleDelimiter",ExpressionUUID->"9b99f2cd-8f2a-481a-a166-f714789c9bb0",
 CellID->186862239],
Cell[23325, 582, 238, 5, 34, "Text",ExpressionUUID->"e9044251-f263-46ba-89cc-8fd38db1a85c",
 CellID->87046347],
Cell[CellGroupData[{
Cell[23588, 591, 807, 21, 61, "Input",ExpressionUUID->"22e88f36-a018-41e5-8e2f-a552d7c54321",
 CellID->156703476],
Cell[24398, 614, 705, 19, 79, "Output",ExpressionUUID->"ddb14bce-20fb-4f09-bca0-361ef13c1616",
 CellID->123232129]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25152, 639, 242, 5, 31, "ExampleDelimiter",ExpressionUUID->"26bb1570-7ebc-4471-9361-15b1a9bc0e6c",
 CellID->449881923],
Cell[25397, 646, 169, 2, 34, "Text",ExpressionUUID->"26291598-17a2-4981-897b-0f41cdb1a267",
 CellID->73220614],
Cell[CellGroupData[{
Cell[25591, 652, 850, 23, 61, "Input",ExpressionUUID->"0c279aec-3fa1-4ba7-ab76-c605e713b21b",
 CellID->233312684],
Cell[26444, 677, 706, 19, 79, "Output",ExpressionUUID->"2d6a0790-4273-4db4-98f1-1e7c7b2847ac",
 CellID->151557820]
}, Open  ]],
Cell[27165, 699, 172, 2, 34, "Text",ExpressionUUID->"dbd77de0-999b-4de9-9319-bc294f33c618",
 CellID->112389031],
Cell[CellGroupData[{
Cell[27362, 705, 849, 23, 61, "Input",ExpressionUUID->"5e2059a9-51ff-4fe1-8a2f-838249c9f9f8",
 CellID->42218661],
Cell[28214, 730, 706, 19, 79, "Output",ExpressionUUID->"8f4b4543-74b1-4e18-af71-4fab98d5162c",
 CellID->505374486]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28981, 756, 125, 2, 53, "Subsection",ExpressionUUID->"c4a6c349-7e50-4eb5-9d86-5c28957d0c65",
 CellID->964056545],
Cell[29109, 760, 178, 2, 34, "Text",ExpressionUUID->"a5d606e7-746e-498e-9c0e-37812f2a579e",
 CellID->649685796],
Cell[CellGroupData[{
Cell[29312, 766, 2747, 73, 112, "Input",ExpressionUUID->"730e6804-95fb-4046-b99a-95649c36eabf",
 CellID->836153427],
Cell[32062, 841, 2517, 70, 130, "Output",ExpressionUUID->"db635405-83bb-48e3-bbce-729776cefc20",
 CellID->340577025]
}, Open  ]],
Cell[CellGroupData[{
Cell[34616, 916, 242, 5, 31, "ExampleDelimiter",ExpressionUUID->"55e3faac-a8e2-4a4c-b599-4cedc5fa8445",
 CellID->497379371],
Cell[34861, 923, 181, 2, 34, "Text",ExpressionUUID->"754bb0aa-b171-434d-a280-a5b91392bb54",
 CellID->141385734],
Cell[CellGroupData[{
Cell[35067, 929, 2849, 75, 112, "Input",ExpressionUUID->"13ffb3dd-c475-45dd-b309-6608c3de522e",
 CellID->5992283],
Cell[37919, 1006, 2515, 70, 130, "Output",ExpressionUUID->"957000c3-d375-4db7-809a-a7fad5d4b8c4",
 CellID->353025700]
}, Open  ]],
Cell[CellGroupData[{
Cell[40471, 1081, 2879, 76, 112, "Input",ExpressionUUID->"bdac0a49-3a05-40a6-b335-fc88b27d19d7",
 CellID->19129526],
Cell[43353, 1159, 2518, 70, 130, "Output",ExpressionUUID->"1fc9dc18-bcf6-4856-b419-5fce7fd389d3",
 CellID->60231231]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45932, 1236, 198, 3, 53, "Subsection",ExpressionUUID->"07b2e8dd-fc06-4928-b34d-6064976018c7",
 CellID->599001874],
Cell[46133, 1241, 239, 3, 34, "Text",ExpressionUUID->"d1372a48-7b4a-4f36-813d-8e6da6be47f6",
 CellID->213814835],
Cell[46375, 1246, 5782, 157, 155, "Text",ExpressionUUID->"d4644dcf-5168-4e14-b88f-1bc8c844d93c",
 CellID->156245712],
Cell[52160, 1405, 892, 23, 48, "Input",ExpressionUUID->"cfbcbb8a-803c-4ddc-be14-d904c35ffff9",
 CellID->129445251],
Cell[53055, 1430, 178, 2, 34, "Text",ExpressionUUID->"506c1997-b8c7-4eff-ab48-97ace3bea8de",
 CellID->266648978],
Cell[CellGroupData[{
Cell[53258, 1436, 20261, 337, 79, "Input",ExpressionUUID->"00769555-3f66-4ecd-97a1-a5924452ec6a",
 CellID->33497519],
Cell[73522, 1775, 323893, 5314, 273, "Output",ExpressionUUID->"1fa25c1d-8884-4870-aa4c-d9338fb9a350",
 CellID->525332395]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[397464, 7095, 144, 2, 53, "Subsection",ExpressionUUID->"45389b47-4730-4c5d-bbf9-8333cd7484d4",
 CellID->754506620],
Cell[397611, 7099, 1423, 40, 34, "Text",ExpressionUUID->"e4ad21dc-724c-4e9c-b896-c6f9a877f024",
 CellID->8192474],
Cell[CellGroupData[{
Cell[399059, 7143, 453, 10, 28, "Input",ExpressionUUID->"3f072b78-563c-4433-ab74-5e0ff725a8f7",
 CellID->65915853],
Cell[399515, 7155, 315, 7, 32, "Output",ExpressionUUID->"373405d4-69e1-48b5-9dfc-caf31c20d426",
 CellID->376275767]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399879, 7168, 134, 2, 53, "Subsection",ExpressionUUID->"8866314a-b5c8-44c3-a035-a77d48db69fc",
 CellID->92483860],
Cell[400016, 7172, 288, 4, 34, "Text",ExpressionUUID->"38f5cc9c-4a76-47ba-8d15-e3b3488f7bd4",
 CellID->224241196],
Cell[CellGroupData[{
Cell[400329, 7180, 371, 8, 28, "Input",ExpressionUUID->"a5e60c77-5a0a-4bcc-9e5c-3d4af9b8f62d",
 CellID->112796673],
Cell[400703, 7190, 345, 8, 32, "Output",ExpressionUUID->"b3e90059-de4f-4507-8000-638e557b59c9",
 CellID->69200625]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401109, 7205, 190, 3, 67, "Section",ExpressionUUID->"be19aff6-4f6d-45fc-8252-821d42d65fb0",
 CellTags->"Source & Additional Information",
 CellID->318391102],
Cell[CellGroupData[{
Cell[401324, 7212, 796, 19, 53, "Subsection",ExpressionUUID->"7c54f323-6e08-41fb-984d-dbb002bd5742",
 CellTags->"Contributed By",
 CellID->127820888],
Cell[402123, 7233, 611, 10, 34, "Text",ExpressionUUID->"1c536ba8-b88b-472b-8936-ea803ccb6b40",
 CellTags->"TabNext",
 CellID->832483124]
}, Open  ]],
Cell[CellGroupData[{
Cell[402771, 7248, 797, 19, 53, "Subsection",ExpressionUUID->"f91782ed-1819-433e-a9fb-cbe478b8399c",
 CellTags->"Keywords",
 CellID->547400482],
Cell[CellGroupData[{
Cell[403593, 7271, 620, 10, 31, "Item",ExpressionUUID->"0dc171a5-4916-4c5e-84c2-66523f741073",
 CellTags->"TabNext",
 CellID->123227828],
Cell[404216, 7283, 592, 9, 31, "Item",ExpressionUUID->"527b7887-d7ea-4e5c-a7f9-99a0e9ca7a5e",
 CellID->145758811],
Cell[404811, 7294, 585, 9, 31, "Item",ExpressionUUID->"1718087e-30eb-4156-9bcc-539cd2bea7e4",
 CellID->16196475],
Cell[405399, 7305, 598, 9, 31, "Item",ExpressionUUID->"55e2086c-1bca-4e0b-a73d-8f0685392104",
 CellID->286938834]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[406046, 7320, 181, 4, 53, "Subsection",ExpressionUUID->"85a1c081-44d5-429b-84e7-76093e87bc34",
 CellTags->"Categories",
 CellID->749076926],
Cell[406230, 7326, 4439, 130, 274, "Output",ExpressionUUID->"efb92c5b-fb14-4aa9-b75a-5ba9c175a585",
 CellTags->"CategoriesCell",
 CellID->496584932]
}, Open  ]],
Cell[CellGroupData[{
Cell[410706, 7461, 774, 19, 53, "Subsection",ExpressionUUID->"18df5efd-0928-469f-9c1d-467ad9344e0c",
 CellTags->"Related Symbols",
 CellID->161079978],
Cell[CellGroupData[{
Cell[411505, 7484, 623, 9, 31, "Item",ExpressionUUID->"5474beb0-631b-4ec7-b5a8-3043778ac625",
 CellID->105835556],
Cell[412131, 7495, 616, 9, 31, "Item",ExpressionUUID->"48b142c8-b09e-4dac-a8ce-311014d5da5f",
 CellID->260595841]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[412796, 7510, 824, 19, 53, "Subsection",ExpressionUUID->"47f538e0-31bc-4766-995c-b3eb9dc91116",
 CellTags->"Related Resource Objects",
 CellID->588449267],
Cell[413623, 7531, 564, 9, 31, "Item",ExpressionUUID->"cf3f59de-f104-434e-93aa-b9fe30134c7c",
 CellTags->"TabNext",
 CellID->960273585]
}, Open  ]],
Cell[CellGroupData[{
Cell[414224, 7545, 875, 20, 53, "Subsection",ExpressionUUID->"2e6805a4-bb1b-4958-815b-eccd870d8c4d",
 CellTags->"Source/Reference Citation",
 CellID->642091068],
Cell[415102, 7567, 551, 8, 34, "Text",ExpressionUUID->"a0c3fcc3-3e1c-48af-ada3-0c25044dc999",
 CellTags->"TabNext",
 CellID->343081869]
}, Open  ]],
Cell[CellGroupData[{
Cell[415690, 7580, 727, 19, 53, "Subsection",ExpressionUUID->"264ee1a3-26a5-46ab-b433-1398700e267f",
 CellTags->"Links",
 CellID->521525586],
Cell[416420, 7601, 855, 15, 31, "Item",ExpressionUUID->"217543c1-569b-45db-a097-63225d2448a4",
 CellTags->"TabNext",
 CellID->485448166]
}, Open  ]],
Cell[CellGroupData[{
Cell[417312, 7621, 880, 21, 53, "Subsection",ExpressionUUID->"d5c7129c-a551-4795-b989-5fdce110e980",
 CellTags->"Tests",
 CellID->74308299],
Cell[CellGroupData[{
Cell[418217, 7646, 339, 7, 28, "Input",ExpressionUUID->"4d9f354b-a0ca-41bc-b602-6fce12ffcda8",
 CellID->667877521],
Cell[418559, 7655, 288, 6, 32, "Output",ExpressionUUID->"ae1f37f6-55ce-4ea4-819a-de4a7d72cfc9",
 CellID->165067661]
}, Open  ]],
Cell[CellGroupData[{
Cell[418884, 7666, 511, 13, 28, "Input",ExpressionUUID->"b97c060c-03db-41e5-bad3-0b17c1640fd8",
 CellID->88538113],
Cell[419398, 7681, 457, 11, 32, "Output",ExpressionUUID->"bf374b95-0709-4f74-8a6e-1c566a9d3eba",
 CellID->398099110]
}, Open  ]],
Cell[CellGroupData[{
Cell[419892, 7697, 544, 14, 28, "Input",ExpressionUUID->"7f5e7d94-549e-4416-a88b-ed22d17b6aae",
 CellID->8456648],
Cell[420439, 7713, 457, 11, 32, "Output",ExpressionUUID->"45d260af-3996-4faf-b4c2-b4a8587ee2ea",
 CellID->136214636]
}, Open  ]],
Cell[CellGroupData[{
Cell[420933, 7729, 1485, 45, 48, "Input",ExpressionUUID->"4fa47335-9d13-45c4-a2bd-7d31eae23654",
 CellID->273795476],
Cell[422421, 7776, 1282, 41, 32, "Output",ExpressionUUID->"623bf120-3d01-4740-af25-18c8777c314b",
 CellID->6435009]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423764, 7824, 182, 4, 67, "Section",ExpressionUUID->"053e60aa-55c6-4c1f-ac22-f7c285c8860d",
 CellTags->"Author Notes",
 CellID->795110225],
Cell[423949, 7830, 564, 8, 34, "Text",ExpressionUUID->"fdd5d944-6acf-43ef-8c25-3733a8a891d9",
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],
Cell[CellGroupData[{
Cell[424550, 7843, 833, 20, 67, "Section",ExpressionUUID->"3bbaa72f-506d-4112-ade3-9a6345ed060f",
 CellTags->"Submission Notes",
 CellID->843283583],
Cell[425386, 7865, 168, 2, 34, "Text",ExpressionUUID->"82be309c-739e-46f3-ab9b-c2df161d3e09",
 CellID->777619296]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425603, 7873, 207, 4, 67, "Section",ExpressionUUID->"25875bc0-b7fe-4728-b28c-41b1f3cc6dca",
 CellGroupingRules->{TitleGrouping, -10000},
 CellTags->"Unused Cells",
 CellID->300658071],
Cell[425813, 7879, 4478, 130, 70, "Output",ExpressionUUID->"84e6ae12-764b-4b44-997f-020bfa33ee79",
 CellID->743873981]
}, Closed]]
}
]
*)

